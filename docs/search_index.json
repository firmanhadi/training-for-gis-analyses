[
["index.html", "Training for GIS Analyses Pengantar", " Training for GIS Analyses Firman Hadi 2019-11-10 Pengantar Repositori ini berisi kumpulan materi untuk Pelatihan Persiapan Uji Kompetensi Analis SIG yang dilaksanakan di Program Studi Teknik Geomatika, Politeknik Negeri Batam. "],
["day2.html", "Bab 1 Basis Data 1.1 Perancangan Basis Data1 1.2 Pembuatan Basis Data dengan PostGIS2", " Bab 1 Basis Data 1.1 Perancangan Basis Data1 1.1.1 Rumusan Dasar Dalam membangun basis data relasional dari awal, adalah penting untuk memberikan waktu lebih dalam memikirkan business process yang terjadi. Basis data yang tidak dirancang dengan baik akan memberikan masalah bagi pengguna, termasuk : hilangnya integritas data seiring dengan waktu ketidakmampuan dalam mendukung query yang diperlukan performa yang buruk, misalnya, lambat dalam menampilkan hasil query Rumusan dasar dalam merancang basis data adalah membuat tabel yang : meminimalisir data berlebih (redundant) menggambarkan satu subyek memiliki satu Primary Key (kode unik untuk setiap baris rekaman (record)) tidak mengandung kolom dengan banyak bagian (multi-part field) (Contoh: “302 Walker Bldg, University Park, PA 16802”) tidak mengandung kolom dengan ragam nilai (Contoh: Kolom Author hendaknya tidak berisi data seperti “Jones, Martin, Williams”) tidak memiliki duplikasi yang tidak perlu (Contoh: hindari penamaan kolom seperti Author1, Author2, Author3) tidak memiliki kolom yang nilainya tergantung dari kolomm lain(Contoh: jangan membuat kolom gaji (Wage) untuk tabel yang memiliki kolom PayRate dan HrsWorked ) 1.1.2 Normalisasi Proses perancangan sebuah basis data seperti yang diuraikan dalam aturan di atas, secara formal disebut dengan normalisasi. Semua perancang basis data melakukan normalisasi, baik mereka menggunakan istilah tersebut untuk menggambarkan prosesnya atau tidak. Ada tiga tingkatan normalisasi, yaitu : First Normal Form (1NF) menggambarkan sebuah basis data yang tabel-tabelnya merepresentasikan entitas yang unik, tidak ada duplikasi kolom (misal, tidak ada Author1, Author2, Author3), memiliki satu atau banyak kolom yang merupakan identitas unik dari setiap baris (primary key, PK). Basis data yang memenuhi persyaratan ini termasuk ke dalam First Normal Form (1NF). Second Normal Form (2NF) menggambarkan sebuah basis data yang dalam kondisi 1NF dan juga menghindari kolom non-key yang tergantung dari subset Primary Key. Silakan lihat penjelasan di tautan berikut untuk melihat contoh sederhananya [www.1keydata.com/database-normalization/second-normal-form-2nf.php]. Dalam contoh di tautan tersebut, CustomerID dan StoreID membangun sebuah composite key (kunci gabungan) – gabungan dari nilai kedua kolom tersebut bersifat unik, menjadi identitas setiap kolom dalam tabel. Dalam kata lain, hanya akan ada satu baris dalam tabel yang memiliki CustomerID 1 dengan StoreID 1, hanya akan ada satu baris dengan CustomerID 1 dan StoreID 3, dan seterusnya. Kolom PurchaseLocation tergantung dari kolom StoreID, yang merupakan sebagian dari Primary Key. Dengan demikian, solusi untuk menempatkan tabel ke dalam 2NF adalah dengan memindahkan hubungan StoreID-PurchaseLocation ke dalam tabel terpisah. Pendekatan ini bersifat intuitif di mana kita dapat membaca nilai PurchaseLocation satu kali dibandingkan berulang kali Third Normal Form (3NF) menggambarkan sebuah basis data dalam tingkat 2NF dan juga menghindari kolom yang nilainya diturunkan dari kolom lain yang bukan Primary Key. Contoh kolom Wage seperti disebutkan di atas adalah sebuah pelanggaran aturan 3NF. Dalam banyak kasus, normalisasi basis data hingga tingkatan 3NF sudah cukup. Perlu ditambahkan juga ada format normalisasi lain seperti Boyce-Codman Normal Form (BCNF, atau 3.5NF), Fourth Normal Form (4NF) dan Fifth Normal Form (5NF). Namun demikian, daripada membuang waktu lebih lama dalam menggambarkan normalisasi tingkat lanjut ini, yang paling simpel adalah mengingat karakteristik dasar dari sebuah tabel yang didesain secara baik seperti di atas. Apabila Anda mengikuti petunjuk tersebut secara seksama, khususnya secara konsisten mencari data berlebih (redundant), Anda akan mampu melakukan normalisasi basis data. Singkatnya, semakin tinggi tingkatan normalisasi, maka akan semakin banyak jumlah tabel yang ada dalam basis data. Semakin banyak jumlah tabel, usaha untuk menggabungkan data dengan cara joins juga akan semakin sulit, dalam arti semakin tinggi level keahlian yang diperlukan untuk membuat queri dan dalam meningkatkan performa basis data. Proses normalisasi kadang-kadang menghasilkan desain yang terlalu sulit untuk diimplementasikan atau kalaupun dapat dibuat, ia memiliki performa yang buruk (baca: lambat). Pada dasarnya, perancangan basis data adalah menyeimbangkan antara kebutuhan yang terkait dengan integritas data dan efisiensi penyimpanan data dengan kebutuhan yang terkait dengan penggunaannya (insert, update, query). Contoh Untuk memahami proses normalisasi basis data, contoh berikut memperlihatkan bagaimana aturan-aturan yang telah dijelaskan dapat diterapkan untuk menghasilkan sebuah basis data yang efisien. Pengusaha Jen dan Barry mengembangkan usaha es krim dan membutuhkan sebuah basis data untuk menjejak pesanan (order). Ketika menerima pesanan, mereka mencatat nama pelanggannya, detil pesanan seperti rasa (flavors) dan jumlah es krim yang dibutuhkan, tanggal pesanan dan alamat pengiriman pesanan. Basis data ini diharapkan dapat membantu mereka dalam menjawab dua penting sebagai berikut : Pesanan mana yang tenggatnya dalam 2 hari ke depan? Perasa apa yang harus dibuat dalam jumlah yang lebih banyak? Tabel pesanan yang dapat dibuat pertama kali adalah seperti gambar berikut : Dengan skema di atas, masalah yang muncul adalah ketika mereka akan membuat sebuah query yang menghitung jumlah perasa vanilla yang diperlukan sesuai pesanan. Jumlahnya bercampur dengan nama perasa dan perasa apapun dapat dimasukkan ke dalam daftar di bagian mana saja (tidak akan konsisten dituliskan dalam kolom pertama atau kedua). Oleh karenanya, desain seperti berikut sepertinya lebih baik: Skema yang kedua ini lebih baik karena memungkinkan mereka untuk melakukan query perasa tertentu dan menjumlahkan kuantitasnya. Namun untuk menghitung perasa vanila yang diperlukan, mereka harus menghitung jumlahnya dari tiga kolom berbeda. Desain ini juga tidak akan dapat menjawab permasalahan apabila satu orang pelanggan memesan lebih dari tiga perasa. Desain seperti berikut mungkin menjawab pertanyaan di atas: Desain seperti di atas memungkinkan penghitungan kuantitas perasa vanila yang dibutuhkan sesuai pesanan dengan lebih mudah. Sayangnya, desain tersebut menghasilkan data berlebih (redundant) dan menuliskan pesanan dari satu pelanggan ke dalam banyak baris (record). Desain yang paling baik adalah dengan memisahkan data ke dalam empat entitas (Customers, Flavors, Orders and Order Items): Apabila mereka hendak mengimplementasikan desain seperti di atas dalam MS-Access, query yang diperlukan untuk menampilkan pesanan yang harus dikirim dalam 2 hari ke depan adalah seperti yang terlihat pada GUI : 1.1.3 Pemodelan Data Pemodelan data dimulai dengan analisis kebutuhan, dapat dilakukan secara formal atau informal, tergantung dari skala proyeknya. Salah satu perangkat umum yang biasa digunakan dalam proses pemodelan adalah diagram entity-relationship (ER). Diagram ER mengilustrasikan kategori data yang harus disimpan (entitas), juga hubungan (relasi) antara entitas-entitas yang didefinisikan. Data models describe real-world entities such as customer, service, products, and the relation between these entities. Data models provide an abstraction for the relations in the database. Data models aid the developers in modeling business requirements and translating business requirements to relations. They are also used for the exchange of information between the developers and business owners. In the enterprise, data models play a very important role in achieving data consistency across interacting systems. For example, if an entity is not defined, or is poorly defined, then this will lead to inconsistent and misinterpreted data across the enterprise. For instance, if the semantics of the customer entity are not defined clearly, and different business departments use different names for the same entity such as customer and client, this may lead to confusion in the operational departments. Data model perspectives are defined by ANSI as follows: Conceptual data model: Describes the domain semantics, and is used to communicate the main business rules, actors, and concepts. It describes the business requirements at a high level and is often called a high-level data model. Logical data model: Describes the semantics for a certain technology, for example, the UML class diagram for object-oriented languages. Physical data model: Describes how data is actually stored and manipulated at the hardware level, such as storage area network, table space, CPUs, and so on. According to ANSI, this abstraction allows changing one part of the three perspectives without amending the other parts. One could change both the logical and the physical data models without changing the conceptual model. To explain, sorting data using bubble or quick sort is not of interest for the conceptual data model. Also, changing the structure of the relations could be transparent to the conceptual model. One could split one relation into many relations after applying normalization rules, or by using enum data types in order to model the lookup tables. The entity-relation model The entity-relation (ER) model falls into the conceptual data model category. It captures and represents the data model for both business users and developers. The ER model can be transformed into the relational model by following certain techniques. Conceptual modeling is a part of the software development life cycle (SDLC). It is normally done after the functional and data requirement-gathering stage. At this point, the developer is able to make the first draft of the ER diagram as well as describe functional requirements using data flow diagrams, sequence diagrams, user stories, and many other techniques. During the design phase, the database developer should give great attention to the design, run a benchmark stack to ensure performance, and validate user requirements. Developers modeling simple systems could start coding directly. However, care should be taken when making the design, since data modeling involves not only algorithms in modeling the application but also data. The change in design might lead to a lot of complexities in the future such as data migration from one data structure to another. While designing a database schema, avoiding design pitfalls is not enough. There are alternative designs where one could be chosen. The following pitfalls should be avoided: Data redundancy: Bad database designs elicit redundant data. Redundant data can cause several other problems, including data inconsistency and performance degradation. When updating a tuple that contains redundant data, the changes on the redundant data should be reflected in all the tuples that contain this data. Null saturation: By nature, some applications have sparse data, such as medical applications. Imagine a relation called diagnostics, which has hundreds of attributes for symptoms such as fever, headache, sneezing, and so on. Most of them are not valid for certain diagnostics, but they are valid in general. This could be modeled by utilizing complex data types such as JSON. Tight coupling: In some cases, tight coupling leads to complex and difficult-to-change data structures. Since business requirements change with time, some requirements might become obsolete. Modeling generalization and specialization (for example, a part-time student is a student) in a tightly coupled way may cause problems. Sebuah diagram ER pada dasarnya adalah cetak biru dari satu struktur basis data. Beberapa RDBMS menyediakan perangkat untuk menggambar diagram ER (contohnya Oracle Designer, MySQL workbench, PostgreSQL pgModeler) dan juga kadang menyediakan kemampuan untuk membuat struktur tabel yang telah dikonsepkan dalam bentuk diagram ke basis data. Dalam konteks GIS, ESRI menyediakan sebuah perangkat yang memungkinkan kita membuat geodatabase baru berdasarkan diagram dengan CASE (Computer-Aided Software Engineering) tools. Untuk lebih lanjutnya, Anda dapat membaca blog ini yang menyelaskan secara detil penggunaan CASE, Using Case tools in Arc GIS 10, [http://blogs.esri.com/esri/arcgis/2010/08/05/using-case-tools-in-arcgis -10/]. 1.1.4 Sample application In order to explain the basics of the ER model, an online web portal to buy and sell cars will be modeled. The requirements of this sample application are as follows, and an ER model will be developed step by step: The portal provides the facility to register users online and provides different services for users based on their categories. Users might be sellers or normal users. The sellers can create new car advertisements; other users can explore and search for cars. All users should provide their full name and a valid email address during registration. The email address will be used for logging in. The seller should also provide an address. The user can rate the advertisement and the seller’s service quality. All users’ search history should be maintained for later use. The sellers have ranks and this affects the advertisement search; the rank is determined by the number of posted advertisements and the user’s rank. The car advertisement has a date and the car can have many attributes such as color, number of doors, number of previous owners, registration number, pictures, and so on. Entities, attributes, and keys The ER diagram represents entities, attributes, and relationships. An entity is a representation of a real-world object such as a car or a user. An attribute is a property of an object and describes it. A relationship represents an association between two or more entities. The attributes might be composite or simple (atomic). Composite attributes can be divided into smaller subparts. A subpart of a composite attribute provides incomplete information that is semantically not useful by itself. For example, the address is composed of a street name, building number, and postal code. Any one of them isn’t useful alone, without its counterparts. Attributes could also be single-valued or multi-valued. The color of a bird is an example of a multi-valued attribute. It can be red and black, or a combination of any other colors. A multi-valued attribute can have a lower and upper bound to constrain the number of values allowed. In addition, some attributes can be derived from other attributes. Age can be derived from the birth date. In our example, the final rank of a seller is derived from the number of advertisements and the user ratings. Key attributes can identify an entity in the real world. A key attribute should be marked as a unique attribute, but not necessarily as a primary key, when physically modeling the relation. Finally, several attribute types could be grouped together to form a complex attribute: Gambar 1.1: Simbol Entitas Entities should have a name and a set of attributes. They are classified into the following: Weak entity: Does not have key attributes of its own Strong entity/regular entity: Has a key attribute A weak entity is usually related to a strong entity. This strong entity is called the identifying entity. Weak entities have a partial key, also known as a discriminator, which is an attribute that can uniquely identify the weak entity, and it is related to the identifying entity. In our example, if we assume that the search key is distinct each time the user searches for cars, then the search key is the partial key. The weak entity symbol is distinguished by surrounding the entity box with a double line. The following diagram shows the preliminary design of a car portal application. The user entity has several attributes. The name attribute is a composite attribute, and email is a key attribute. The seller entity is a specialization of the user entity. The total rank is a derived attribute calculated by aggregating the user ratings and the number of advertisements. The color attribute of the car is multi-valued. The seller can be rated by the users for certain advertisements; this relation is a ternary relation, because the rating involves three entities, which are car, seller, and user. The car picture is a subpart attribute of the advertisement. The following diagram shows that the car can be advertised more than once by different sellers. In the real world, this makes sense, because one could ask more than one seller to sell his car: When an attribute of one entity refers to another entity, some relationships exist. In the ER model, these references should not be modeled as attributes but as relationships or weak entities. Similar to entities, there are two classes of relationships: weak and strong. Weak relationships associate the weak entities with other entities. Relationships can have attributes as entities. In our example, the car is advertised by the seller; the advertisement date is a property of the relationship. Relationships have cardinality constraints to limit the possible combinations of entities that participate in a relationship. The cardinality constraint of car and seller is 1:N; the car is advertised by one seller, and the seller can advertise many cars. The participation between seller and user is called total participation, and is denoted by a double line. This means that a seller cannot exist alone, and he must be a user. Note The many-to-many relationship cardinality constraint is denoted by N:M to emphasize the different participation by the entities. Up until now, only the basic concepts of ER diagrams have been covered. Some concepts, such as (min, max) cardinality notation, ternary/n-ary relationships, generalization, specialization, and enhanced entity relation(EER) diagrams, have not been discussed. Mapping ER to relations The rules to map an ER diagram to a set of relations (that is, the database schema) are almost straightforward, but not rigid. One could model an entity as an attribute, and then refine it to a relationship. An attribute that belongs to several entities can be promoted to be an independent entity. The most common rules are as follows (note that only basic rules have been covered, and the list is not exhaustive): Map regular entities to relations. If entities have composite attributes, then include all the subparts of the attributes. Pick one of the key attributes as a primary key. Map weak entities to relations. Include simple attributes and the subparts of the composite attributes. Add a foreign key to reference the identifying entity. The primary key is normally the combination of the partial key and the foreign key. If a relationship has an attribute and the relation cardinality is 1:1, then the relation attribute can be assigned to one of the participating entities. If a relationship has an attribute and the relation cardinality is 1:N, then the relation attribute can be assigned to the participating entity on the N side. Map many-to-many relationships, also known as N:M, to a new relation. Add foreign keys to reference the participating entities. The primary key is the composition of foreign keys. Map a multi-valued attribute to a relation. Add a foreign key to reference the entity that owns the multi-valued attribute. The primary key is the composition of the foreign key and the multi-valued attribute. UML class diagrams Unified Modeling Language (UML) is a standard developed by the Object Management Group (OMG). UML diagrams are widely used in modeling software solutions, and there are several types of UML diagrams for different modeling purposes including class, use case, activity, and implementation diagrams. A class diagram can represent several types of associations, that is, the relationship between classes. They can depict attributes as well as methods. An ER diagram can be easily translated into a UML class diagram. UML class diagrams also have the following advantages: Code reverse-engineering: The database schema can be easily reversed to generate a UML class diagram. Modeling extended relational database objects: Modern relational databases have several object types such as sequences, views, indexes, functions, and stored procedures. UML class diagrams have the capability to represent these object types. The following class diagram is generated from reverse-engineering the SQL code of a car_portaldatabase: 1.2 Pembuatan Basis Data dengan PostGIS2 1.2.1 Membuat Skema Baru dengan pgAdmin 4 Instalasi PgAdmin 4 sangat mudah. Anda tinggal men-download-nya dari download page di situsnya, dan laksanakan proses instalasi di workstation hingga selesai. Sebagai catatan, Anda akan diminta untuk membuat master password, yaitu password yang digunakan saat pertama kali mengakses PgAdmin 4 di workstation Anda. PgAdmin 4 Setelah Anda berhasil masuk ke PgAdmin 4, maka yang pertama kali harus dilakukan adalah create connection ke server PostgreSQL yang akan Anda akses. PgAdmin 4 Pada dialog ini, di tab General kita isi Name dengan Webmap Development Server (atau sesuka Anda), kemudian checkbox Connect now?-nya kita check, dan Comments-nya kita isi dengan deskripsi koneksinya. PgAdmin 4 Pindah ke tab Connection, kita isi Host name/address dengan 192.168.1.23 (IP server PostgreSQL-nya), Port: 5432, Username: pgdbadmin (biar bisa mengakses seluruh database yang ada), dan password-nya. Checkbox Save Password?-nya boleh di-check, tapi lebih baik dibiarkan unchecked saja, sehingga setiap kali koneksi Anda akan diminta untuk memasukkan password. PgAdmin 4 Kalau seluruh isian kita sudah benar, maka begitu kita klik Save, maka entry Webmap Development Server akan muncul di pilihan server pada PgAdmin 4: PgAdmin 4 Waktu kita unfold entry ini, maka akan muncul pilihan akses ke Databases, Login/Group Roles dan Tablespaces. Selanjutnya, kita akan fokus ke Databases dulu. PgAdmin 4 Setelah kita unfold Databases, maka akan terlihat 3 database, yaitu postgres (default database, yang digunakan oleh PostgreSQL), postgis_template (database yang sudah kita create sebelumnya dan kita fungsikan sebagai template database) dan webmap_db (database yang akan kita akses selanjutnya). PgAdmin 4 Masuk ke webmap_db -&gt; Schemas -&gt; public -&gt; Tables, maka akan terlihat table bernama ne_10m_admin_0_countries, yang mana itu adalah hasil upload shapefile yang sudah kita laksanakan pada bagian sebelumnya. PgAdmin 4 Klik-kanan pada table tersebut (ne_10m_admin_0_countries), pilih View/Edit Data -&gt; All Rows: PgAdmin 4 Maka selanjutnya pada bagian kanan (tampilan utama) dari PgAdmin 4 akan muncul tampilan query dan seluruh rows yang ada dalam table ne_10m_admin_0_countries. PgAdmin 4 Menariknya pada PgAdmin 4 ini, jika Anda scroll ke kanan terus hingga akhir table, akan ada sebuah button yang berfungsi untuk menampilkan/visualisasi data geometry-nya. PgAdmin 4 Kalau di-klik geometry viewer button ini, maka selanjutnya akan muncul webmap berbasis Leaflet.JS yang menampilkan data geometry-nya. PgAdmin 4 Sebagai catatan, basemap dari OpenStreetMap hanya akan muncul apabila SRID-nya EPSG 4326. Saya belum mencoba untuk EPSG 3857 atau lainnya. Untuk lebih jelasnya mengenai perbedaan antara EPSG 4326 dan EPSG 3857, dapat Anda baca di artikel bertajuk EPSG 4326 vs EPSG 3857 ini. 1.2.2 PostGIS Shapefile and DBF Loader/Exporter Lakukan langkah-langkah ini di workstation Anda. FYI, PostGIS Shapefile and DBF Loader/Exporter adalah sebuah aplikasi sederhana yang menjadi bagian dari paket instalasi PostGIS. Instalasi PostGIS membutuhkan PostgreSQL yang sudah terinstall (dan aktif) sebelumnya. Nah, menurut opini saya, instalasi PostgreSQL dan PostGIS di workstation nggak berguna, kecuali hanya untuk “memancing” instalasi Application Stack Builder, biar bisa install PostGIS yang mana di proses instalasinya akan mengikutkan PostGIS Shapefile and DBF Loader Exporter. PostgreSQL dan PostGIS toh sudah ada di server. Tapi ya… mau gimana lagi? Let’s just do it! Download installer PostgreSQL dari EnterpriseDB/EDB, dan install sampai selesai. Jika Anda akan langsung melakukan shapefile upload test, Anda bisa men-download 1 file dari situs Natural Earth. Ambil contoh, batas administrasi negara level 0. Setelah instalasi PostgreSQL selesai, dari Start menu jalankan Application Stack Builder. Application Stack Builder Pilih PostgreSQL 10 (x64) on port 5432, dan klik Next &gt;. Jangan pilih yang &lt;remote server&gt; yaa…, karena pilihan ini selanjutnya tidak menyediakan opsi instalasi Spatial Extensions (PostGIS dll.). Application Stack Builder Tunggu beberapa saat, Application Stack Builder akan men-download list aplikasi yang bisa Anda install di tahap selanjutnya. Jika sudah muncul tampilan: Application Stack Builder Pilih Npgsql, pgJDBC dan psqlODBC pada kelompok Database Drivers, dan PostGIS 2.5 Bundle for PostgreSQL 10 (64 bit) pada kelompok Spatial Extensions. Application Stack Builder Application Stack Builder Klik Next &gt;, dan tunggu beberapa saat hingga Application Stack Builder selesai men-download dan meng-install seluruh aplikasi yang sudah dipilih. Setelah selesai, keluar/matikan Application Stack Builder-nya dan buka Start menu. Pilih (atau cari dulu) menu PostGIS 2.x Shapefile and DBF Loader Exporter. Tampilan aplikasinya: PostGIS Shapefile DBF Loader Connection testing ke server. Klik View connection details…, dan isikan Username: pgdbuser, Password: [password], Server Host: 192.168.1.23 dan port-nya: 5432, Database: webmap_db seperti ini: PostGIS Shapefile DBF Loader Jika koneksinya sukses, maka pada bagian Log Window akan muncul log yang mengkonfirmasi bahwa koneksi berhasil. PostGIS Shapefile DBF Loader Jika koneksi gagal, periksa kembali pengaturan koneksinya. Sekarang saatnya Anda mencoba meng-upload sebuah shapefile ke PostgreSQL/PostGIS di server menggunakan PostGIS 2.x Shapefile and DBF Loader Exporter. O ya, tapi lebih baik kita bahas dulu spesifikasi file yang pada bagian 8.1 di atas saya sarankan untuk di-download, yaitu batas administrasi negara level 0. Kalau kita ekstrak file ini, maka kita akan memiliki 1 set files yang yang nama file-nya identik, tapi extension-nya berbeda. Dalam konteks pembahasan ini, kita hanya akan fokus pada file ne_10m_admin_0_countries.prj saja, karena pada saat upload shapefile nanti, kita butuh informasi SRID (Spatial Reference System Identifier). File ber-extension *.prj ini berisi informasi tentang CRS (Coordinate Reference System) yang diterapkan/digunakan oleh file ber-extension *.shp dan *.shx di direktori yang sama. Kalau Anda membuka file ini di ASCII text editor seperti Notepad atau Notepad++, dan Anda menemui entry yang bertuliskan WGS_1984, maka besar kemungkinan SRID -nya adalah EPSG 4326. Lebih lanjut lagi, “tebakan” SRID ini saya kira cukup masuk-akal karena shapefile ini coverage-nya world. Jika Anda ingin mengetahui lebih lanjut tentang CRS, WGS 1984, SRID, dan lain sebagainya yang terkait, silahkan gali lebih dalam, asal jangan “tersesat” saja (baca: menyerah, dan langsung ngikut paham bumi-datar. Hahaha…). Kembali ke tampilan PostGIS Shapefile and DBF Loader Exporter, langsung saja klik Add File, maka dialog Select a Shape file muncul, pilih (klik) shapefile yang akan di-upload, dan klik Open. PostGIS Shapefile DBF Loader Setelah klik Open, maka shapefile tersebut akan masuk ke Import List. Dalam tampilan ini mari kita fokus ke boks merah, yaitu kolom SRID. PostGIS Shapefile DBF Loader Klik angka 0 dalam kolom, dan isi dengan angka 4326, dan klik pada ruang kosong dalam Import List, di bawah entry shapefile-nya. Untuk nama Table dan Geo Column yang akan jadi target di PostgreSQL/PostGIS biarkan saja apa-adanya. PostGIS Shapefile DBF Loader Selanjutnya klik Import, dan tunggu beberapa saat sampai selesai. Jika tidak ada error saat proses upload, maka setelah selesai di Log Window-nya akan muncul konfirmasi bahwa upload shapefile-nya berhasil. PostGIS Shapefile DBF Loader Sampai pada tahap ini, di PostgreSQL/PostGIS server sudah ada contoh geodata yang sudah siap diakses dari berbagai kanal. Testing PostGIS Layer di Quantum GIS. Test mengakses PostGIS layer yang paling sederhana adalah dengan menggunakan Quantum GIS. Aktifkan Quantum GIS Anda, buat project baru, kemudian klik menu Layer -&gt; Data Source Manager: QGIS PostGIS Layer Setelah dialog Data Source Manager muncul, klik PostgreSQL pada bagian kiri, sehingga muncul tampilan koneksi ke PostgreSQL di bagian kanan, dan pada bagian Connections, klik New: QGIS PostGIS Layer Setelah Anda klik New, maka akan muncul dialog Create a New PostGIS Connection. QGIS PostGIS Layer Pada bagian Connection Information, isi Name: webmap_db@192.168.1.23 (atau yang lain sesuka Anda), Service dibiarkan kosong saja, Host: 192.168.1.23, Port: 5432 dan Database: webmap_db. Pada bagian Authentication, klik tab Basic, dan isi User name: pgdbuser, checkbox Store-nya di-check, Password diisi dengan password-nya pgdbuser, dan checkbox Store-nya dibiarkan unchecked saja. Berikutnya Anda bisa melakukan connection testing dengan meng-klik Test connection. Konfirmasi berhasil atau tidak-nya koneksi akan muncul pada bagian atas dialog box ini. Jika Anda ingin hanya menampilkan table yang memiliki geometry field saja, check saja checkbox pada opsi Don’t resolve type of unrestricted columns (GEOMETRY). Setelah Anda klik OK, maka table yang tadi sudah terbentuk saat kita meng-upload shapefile akan muncul sebagai pilihan layer yang akan ditampilkan. QGIS PostGIS Layer Klik (pilih) pada table tersebut, kemudian klik Add pada bagian bawah dan tunggu sejenak hingga tampilan layer-nya muncul di belakang dialog Data Source Manager ini. Selanjutnya klik Close. QGIS PostGIS Layer Jika layer ne_10m_admin_0_countries sudah muncul, maka test PostGIS layer Anda sudah berhasil. 1.2.3 Download Data Service Kemendagri 1.2.4 Impor Data Sumber: https://www.e-education.psu.edu/spatialdb/l2_p4.html↩ Sumber: https://github.com/andyprasetya/webmap-development-server↩ "],
["studi-kasus-pembangunan-basis-data-untuk-analisis-wilayah-layanan.html", "Bab 2 Studi Kasus : Pembangunan Basis Data untuk Analisis Wilayah Layanan 2.1 Praktek Perancangan Basis Data", " Bab 2 Studi Kasus : Pembangunan Basis Data untuk Analisis Wilayah Layanan Topik membuat desain basis data relasional menggunakan diagram ER melakukan normalisasi dalam perancangan basis data membangun basis data spasial untuk analisis wilayah layanan (service area analyses) terkait fasiitas pendidikan dan kesehatan melakukan integrasi data spasial dan non-spasial Perangkat pgModeler Download (https://pgmodeler.io/download) Source code  (https://github.com/pgmodeler/pgmodeler.git) CASE tools (ArcGIS 10) Studi Kasus Analisis Layanan Fasilitas Kesehatan Data yang diperlukan : 1. Fasilitas - Rumah Sakit - Rumah Bersalin - Posyandu - Puskesmas 2. Batas Administrasi 3. Jalan 4. Jumlah penduduk 5. Kepadatan penduduk (WorldPop) Analisis Layanan Fasilitas Pendidikan (SMA) Data yang diperlukan: 1. SMA 2. Batas Administrasi 3. Jalan 4. Jumlah penduduk 5. Kepadatan penduduk (WorldPop) 2.1 Praktek Perancangan Basis Data Intisari Melakukan identifikasi entitas Melakukan identifikasi atribut untuk setiap entitas Menggambarkan hubungan antara entitas Melakukan normalisasi tabel Sumber data Dapat dapat diperoleh dari : OpenStreetmap (http://download.geofabrik.de/asia/indonesia.html) Direktori Layanan ArcGIS Rest Service Kemendagri (http://gis.dukcapil.kemendagri.go.id/arcgis/rest/services/) "],
["basis-data-lanjut.html", "Bab 3 Basis Data Lanjut 3.1 Non-spatial SQL Queries 3.2 Spatial SQL Queries 3.3 Backup dan Restore", " Bab 3 Basis Data Lanjut Topik 3.1 Non-spatial SQL Queries Membuat tabel baru Tujuan : Membuat tabel baru dari tabel yang sudah ada dengan kolom terpilih CREATE TABLE kelurahan as SELECT geom, giskemen_2, giskemen_4, giskemen18,giskemen19,giskemen20,giskemen21, giskemen27, giskemen28 FROM public.desa_batam Rename column Tujuan : Mengganti nama kolom tertentu ALTER TABLE public.kelurahan RENAME COLUMN giskemen_2 TO nama_desa; Mengubah Primary Key ALTER TABLE desa_batam DROP CONSTRAINT id; ALTER TABLE desa_batam RENAME COLUMN giskemen_4 TO id; ALTER TABLE desa_batam ADD PRIMARY KEY (id); Menambah Kolom ALTER TABLE public.kelurahan ADD COLUMN giskemen33 FROM public.desa WHERE giskemen_4.public.desa.id = giskemen_4.public.kelurahan.id 3.2 Spatial SQL Queries 3.2.1 Adjacent Create New Layer SELECT * into qlayer FROM kelurahan WHERE st_touches(kelurahan.geometry, ( SELECT geometry FROM kelurahan WHERE nama_desa = &#39;SADAI&#39;)) Create As View CREATE VIEW TestView AS SELECT * FROM kelurahan WHERE st_touches(kelurahan.geom, ( SELECT geom FROM kelurahan WHERE nama_desa = 'SADAI')); 3.3 Backup dan Restore Presentasi : https://gitpitch.com/firmanhadi/lapan-okt-19/master#/ Video Proof of Concept Backup dengan pgBarman https://www.dropbox.com/s/tk2g296cc0pv6dh/backup_poc_v1.mkv?dl=0 Pooling Mechanism https://www.dropbox.com/s/nl3xa2bnlay6ppk/pooling_mechanism_poc_v1.mkv?dl=0 https://www.dropbox.com/s/dtugpqi6k8hcsc3/pooling_mechanism_poc_v2.mkv?dl=0 Failover Mechanism https://www.dropbox.com/s/j5f9ks21db18ebv/replication_failover_poc_v1.mkv?dl=0 Software https://sqlbackupandftp.com/postgresql-backup "],
["pemodelan-sistem-informasi-geografis.html", "Bab 4 Pemodelan Sistem Informasi Geografis 4.1 Conceptual framework 4.2 Data 4.3 Final regression model 4.4 Studi Kasus : Pemodelan SIG", " Bab 4 Pemodelan Sistem Informasi Geografis Referensi “Geographic Information System (GIS) modeling approach to determine the fastest delivery routes”: https://www.sciencedirect.com/science/article/pii/S1319562X15001370 4.1 Conceptual framework 4.2 Data 4.3 Final regression model LTIME = +0.2663 * CARVOLUME + 0.6984 * LLENGTH + 0.0203 * LPOP + 0.0605 * TWOWAY + 0.1681 * SCHOOL + 0.0317 * RESIDENTIAL - 0.5497 4.4 Studi Kasus : Pemodelan SIG 4.4.1 Analisis Wilayah Layanan (Service Area Analyses) Load layer jalan dan fasilitas kesehatan dalam format UTM (Zona 48N). Load raster kepadatan penduduk Melakukan analisis service area Processing &gt; Network analyses &gt; Service area Create buffer from service area lines Calculate raster using vector Zonal statistics 4.4.2 Menghitung jumlah rumah di sempadan sungai "],
["hari-keenam.html", "Bab 5 Analisis Sistem Informasi Geografis 5.1 Basic Geoprocessing 5.2 Terrain analyses 5.3 Density Analyses (Analisis Kepadatan) 5.4 Analisis kesesuaian", " Bab 5 Analisis Sistem Informasi Geografis Data Data dapat diunduh di tautan berikut https://firmanhadi.github.io/training-for-gis-analyses/img/Day6.zip Analisis spasial adalah sebuah proses untuk mengkaji lokasi, atribut dan hubungan antara fitur dari data spasial melalui cara overlay dan teknik analisis lainnya, dalam rangka menjawab pertanyaan atau mendapatkan pemahaman yang bermanfaat. Analisis spasial mengekstrak atau membuat informasi baru dari data spasial. 5.1 Basic Geoprocessing Geoprocessing adalah operasi SIG untuk memanipulasi data. Operasi geoprocessing membutuhkan input, melakukan operasi tertentu pada data tersebut dan memberikan hasil dari operasi dalam bentuk output dataset, seringkali disebut juga data turunan. Operasi geoprocessing yang umum adalah overlay, feature selection dan analisis, pemrosesan topologi dan konversi data. Geoprocessing memungkinkan Anda untuk mendefinisikan, mengelola dan menganalisis informasi geografis yang digunakan untuk membuat keputusan. Dengan kata lain, ektraksi atau pengubahan informasi seperti yang Anda harapkan dari data selalu melibatkan geoprocessing. 5.1.1 Penapisan data Kawasan lindung (taman nasional, suaga margasatwa dan hutan lindung) direncanakan dan dikelola dengan tujuan utama untuk konservasi biodiversitas. Hampir semua kawasan lindung terpapar interaksi dengan manusia, baik di dalam ataupun di luar kawasan. Hal ini akan berpengaruh terhadap hidupan liar dan habitatnya. Oleh karena itu, pertumbuhan populasi merupakan salah satu masalah utama dalam pengelolaan kawasan lindung. Hal tersebut akan memicu perubahan tutupan lahan dan penggunaan lahan, yang berdampak pada semakin tingginya tekanan terhadap kawasan lindung. Walaupun efek kawasan lindung terhadap permukiman manusia masih menjadi perdebatan, ada sebuah kebutuhan pengelolaan interaksi tersebut, baik dalam hal positif ataupun negatif, yang menjadi vital dalam menjaga kelestarian layanan ekosistem. Dengan alasan ini, memetakan sebaran permukiman adalah salah hal yang dilakukan pertama kali dalam mengelola kawasan lindung. Dalam pelatihan ini, permukiman direpresentasikan sebagai titik perkampungan dari OpenStreetMap yang akan diekstrak melalui query atau penapisan data. Caranya adalah sebagai berikut : Buka osm_points.shp Klik-kanan pada Layer dan pilih Open Attribute Table. Gambar 5.1: Open Attribute Table Klik tombol Select features by expression. Gambar 5.2: Select Features by expression button Pilih place untuk opsi Field and Values. Klik tombol All unique untuk melihat nilai yang ada di kolmo Place. Ketik ekspresi “place” = ‘village’, klik tombol Select features di bagian bawah untuk melakukan penapisan data. Gambar 5.3: Select by expression window Baris yang terpilih akan berwarna biru (highlight). Gambar 5.4: Selected records Klik kanan pada Layer osm_points layer dan pilih “Save as” Isikan pilihan seperti pada Gambar 5.6. Dan jangan lupa untuk memilih Save only selected features. Untuk mengubah Coordinate Reference System (CRS), klik ikon Globe pada opsi CRS dan ketikkan 32648 dalam kotak Filter. Gambar 5.5: Save Vector Layer As window Gambar 5.6: Selecting new CRS 5.1.2 Dissolve Satu atau lebih atribut dapat dipilih untuk menggabungkan (merge) geometri yang termasuk ke dalam kelas yang sama, atau semua geometri, dapat digabungkan. Semua luaran (output) geometri akan dikonversi ke dalam bentuk multi geometri. Apabila inputnya adalah Layer poligon, common boundaries (batas bersama) dari poligon-poligon tetangga yang digabungkan, akan dihapus. Untuk latihan ini, data yang akan digunakan adalah batas administrasi Laos. Batas ini terdiri dari tiga level (1) negara, (2) propinsi dan (3) distrik. Kita akan menggabungkan batas distrik ke tingkat propinsi. Silakan ikuti langkah berikut untuk menggabungkan poligon berdasarkan atribut: Buka gadm36_LAO_2.shp di Map Display. Gambar 5.7: Lao Admin Boundary Level 2 Pilih Vector -&gt; GeoProcessing Tools -&gt; Dissolve Gambar 5.8: Dissolve menu Klik … pada Unique ID Field, pilih NAME1 dan klik OK. Gambar 5.9: NAME1 selected as Unique ID Pada menu Dissolve, klik Run in the background untuk menjalankan proses.Hasilnya akan ditampilkan di Map Display. Gambar 5.10: Dissolved region 5.1.3 Polygon dari layer extent Fungsi ini bermanfaat ketika kita ingin memotong raster atau vektor dengan menggunakan extent (bounding box) dari fitur tertentu. Ikuti langkah berikut untuk melakukan ekstraksi batas dari poligon: Pilih Vector -&gt; Research Tools -&gt; Extract layer extent Anda dapat mengatur apakah luaran disimpan sebagai layer sementara atau disimpan ke dalam berkas baru. Gambar 5.11: Extract layer extent Hasil dari proses ini adalah sebuah poligon kotak (persegi panjang) berdasarkan batas koordinat kiri-atas dan kanan-bawah dari fitur yang digunakan. Gambar 5.12: Layer extent created 5.1.4 Reklasifikasi Fitur ini merupakan salah satu teknik yang bermanfaat untuk mengubah rentang nilai atau mengelompokkannya ke dalam kategori yang baru. Kita akan melakukan klasifikasi ketinggian ke dalam tiga kelas: - Kurang dari 1.000 m - Antara 1.000 dan 2.000 m - Lebih dari 2.000 m Untuk melakukan ini, silakan ikuti tahapan berikut : Buka srtm_58_09.tif Buka fungsi r.reclass dari menu Processing Toolbox. Isi pilihan seperti terlihat dalam gambar dan klik Run. Gambar 5.13: Reclassifying the elevation data Hasilnya adalah layer dengan kelas baru Gambar 5.14: Reclassified elevation data Nilai dari setiap piksel dibandingkan dengan rentang limit yang ada di lookup table. Apabila nilai piksel termasuk ke dalam kelas tertentu, nilai kelas untuk rentang ini akan digunakan di dalam layer luaran. 5.2 Terrain analyses Tipe raster tertentu memungkinkan Anda untuk mendapatkan informasi yang lebih terkait terrain. Biasanya Digital Elevation Models (DEMs) digunakan untuk keperluan ini. 5.2.1 Persiapan Buka srtm_58_09.tif (ada di dalam sub folder TIF). Layer ini merupakan DEM dengan EPSG:4326 CRS dan ketinggian dalam kaki (feet). Karakteristik ini tidak cocok untuk algoritma terrain analyses, harus dikonversi terlebih dahulu ke dalam proyeksi meter (Universal Transverse Mercator). Reproyeksi layer ke sistem CRS EPSG:32648, menggunakan pilihan Save as… pada menu yang muncul ketika di-klik kanan pada nama layer. Buka layer yang dihasilkan. Ada hal yang perlu diperhatikan ketika menerapkan algoritma terrain analyses, agar hasilnya benar. Salah satu permasalahan utamanya adalah apabila raster yang digunakan memiliki piksel dengan ukuran panjang dan lebar yang tidak sama (bukan bujur sangkar). Asumsi yang biasa digunakan adalah semua piksel pasti bujur sangkar. Namun seringkali data yang kita dapatkan tidak seperti itu. Oleh karena itu, tahapan yang perlu dilakukan adalah mengekspor layer dan mendefinisikan ukuran piksel dengan nilai yang sama, misalnya 30 atau 90 m. Caranya adalah dengan klik kanan pada nama layer dan pilih Save as … . Pada dialog save yang ada, pastikan untuk mengisikan nilai piksel di bagian bawah dialog : Gambar 5.15: Save raster layer as 5.2.2 Kelerengan Kelerengan (Slope) merupakan salah satu parameter dasar yang dapat diturunkan dari DEM. Ia adalah turunan pertama dari DEM dan menggambarkan laju perubahan ketinggian. Slope dihitung dengan melakukan analisis ketinggian dari setiap piksel, membandingkannya dengan ketinggian piksel di sekelilingnya. Untuk menghitungnya di QGIS, silakan ikuti cara berikut : Pada opsi Processing Toolbox , pilih algoritma Slope, klik ganda untuk membukanya. Gambar 5.16: Calculating slope Pilih DEM sebagai layer masukan (input). Klik Run untuk menjalankan prosesnya. 5.2.3 Hillshade Layer hillshade umumnya digunakan untuk memperbagus tampilan peta dan topografi yang intuitif, dengan mensimulasikan sumber cahaya dan bayangan yang dibentuk oleh permukaan bumi. Hillshade dapat dihitung dengan cara sebagai berikut : Pada opsi Processing Toolbox, cari algoritma Hillshade dan klik-ganda untuk membuka menunya. Gambar 5.17: Calculating hillshade Pilih DEM sebagai Input layer, gunakan parameter default. Klik Run untuk menjalankan algoritmanya. 5.3 Density Analyses (Analisis Kepadatan) Seringkali kita harus bekerja dengan data besar dan padat fiturnya, yang membuat penampilan datanya lambat. Jumlahnya yang ribuan atau bahkan jutaan fitur seringkali sulit diinterpretasi, terjadi overlap antar fitur yang menyebabkan pendeteksian pola cluster atau distribusinya tidak mudah untuk dilakukan. Pada bagian ini, kita akan belajar mengenai teknik yang memungkinkan visualisasi dataset semacam itu dengan bentuk yang lebih mudah dibaca dan dengan waktu pemuatan (loading) yang lebih cepat. Setelah melakukan praktek di bagian ini, Anda diharapkan mampu melakukan analisis kepadatan (density analyses) untuk data yang Anda miliki dan mengekstrak informasi dari peta kepadatan. 5.3.1 Konsep Peta kepadatan memungkinkan estimasi visual konsentrasi objek atau peristiwa di area studi. Peta seperti itu sangat berguna untuk penilaian pola distribusi fitur di wilayah studi. Ketika kita cukup menambahkan lokasi fitur atau peristiwa (misalnya, sebagai titik) ke peta, kita tidak dapat melihat perubahan konsentrasi mereka di area yang berbeda. Analisis kepadatan memberi kita fungsionalitas seperti itu dengan menggunakan karakteristik area yang seragam, seperti jumlah fitur per hektar atau kilometer persegi. Peta kepadatan memberi kita kemampuan untuk memperkirakan konsentrasi beberapa fitur dalam suatu area. Ini membantu kita menemukan area di mana reaksi mendesak diperlukan atau yang cocok dengan kriteria. Heatmap juga membantu mengontrol kondisi dan perubahannya. Peta kepadatan juga sangat berguna ketika wilayah yang dipetakan (misalnya, kabupaten) memiliki ukuran yang berbeda. Misalnya, jika kita ingin tahu berapa banyak orang yang tinggal di setiap kabupaten, kita hanya perlu peta ordinal dengan data populasi. Menurut peta ini, sebuah distrik besar mungkin memiliki populasi yang lebih tinggi daripada distrik yang lebih kecil. Tetapi jika kita ingin mengidentifikasi kabupaten dengan konsentrasi populasi yang lebih tinggi, maka kita membutuhkan peta kepadatan untuk melihat jumlah orang per kilometer persegi. Dan peta kepadatan akan menunjukkan kepada kita bahwa, pada kenyataannya, daerah kecil dengan kepadatan penduduk yang tinggi mungkin memiliki lebih banyak orang per kilometer persegi daripada kabupaten yang lebih besar. Secara umum, kita dapat menunjukkan pada peta distribusi kepadatan fitur itu sendiri (misalnya, sekolah), serta distribusi beberapa karakteristik numerik fitur ini (misalnya, jumlah siswa di sekolah). Hasilnya akan sangat berbeda dalam kasus ini. Peta kepadatan sekolah dapat membantu departemen pendidikan menemukan daerah-daerah di mana lebih banyak sekolah dibutuhkan, sementara peta kepadatan dibuat dari informasi tentang jumlah siswa di setiap sekolah dapat membantu perusahaan transportasi untuk merencanakan rute bus dan untuk memutuskan di mana menempatkan halte bus. . Kasus penggunaan yang paling umum adalah pembuatan peta kepadatan untuk menampilkan kerapatan fitur titik. Peta seperti ini sering disebut heat map. Apa itu heat map? Ini adalah layer raster. Setiap pikselnya menggambarkan kepadatan fitur di sekitarnya (misalnya, jumlah orang per kilometer persegi), yang tergantung pada jumlah fitur dalam beberapa area. Untuk membuat heat map, dalam kasus paling sederhana, GIS melihat fitur di sekitar pusat piksel, menggunakan radius pencarian yang diberikan. Kemudian jumlah fitur yang termasuk dalam radius yang diberikan dihitung dan dibagi dengan luas wilayah. Nilai ini akan menjadi nilai piksel. Kemudian piksel selanjutnya akan dianalisis, dan seterusnya. Sebagai hasilnya, kita akan mendapatkan kombinasi nilai, yang menciptakan permukaan yang halus. Untuk memahami ini lebih baik, lihat diagram berikut: Gambar 5.18: General principle of creating heatmaps Diagram ini menunjukkan prinsip umum pembuatan heat map. Titik-titik hijau menggambarkan fitur yang digunakan untuk pembuatan peta kepadatan, kotak biru adalah sel raster saat ini, dan lingkaran titik-titik merah menandai radius pencarian, misalnya, 1 km. Dalam hal ini, area yang dicakupi adalah sekitar 3,14 km persegi. Seperti yang dapat kita lihat pada diagram di sebelah kiri, empat fitur berada dalam radius pencarian. Jadi, piksel raster akan mendapatkan nilai 4 / 3,14 = 1,27. Di sisi kanan, kita perhatikan bahwa piksel berikutnya akan mendapatkan nilai 1,59 karena sekarang ada lima fitur di dalam radius pencarian. Ini adalah pendekatan paling sederhana. Dalam aplikasi dunia nyata, algoritma yang lebih kompleks digunakan, di mana setiap titik memiliki dampak pada nilai-nilai piksel tetangga, tergantung pada jaraknya dari piksel-piksel tersebut. 5.3.2 Membuat Heatmap dengan plugin QGIS Dengan bantuan plugin inti QGIS yang disebut Heatmap, kita dapat dengan mudah membuat heat map dari data titik vektor dan menggunakannya untuk analisis lebih lanjut. Pertama, kita perlu mengaktifkan plugin ini, jika belum diaktifkan. Setelah aktivasi, ia membuat submenu di bawah menu Raster dan menempatkan tombolnya pada bilah alat Raster . Mari kita buat peta kepadatan untuk lapisan kebisingan , yang berisi informasi tentang keluhan tentang tingkat kebisingan yang tinggi. Lapisan ini berisi 44.397 fitur, dan sulit untuk mengetahui tempat mana yang berisik. Informasi tentang tempat-tempat seperti itu mungkin berguna bagi departemen kepolisian atau lembaga lain untuk merencanakan beberapa kegiatan untuk mengurangi kebisingan, atau bagi mereka yang mencari apartemen dan tidak ingin hidup berdampingan dengan tetangga yang hobinya mendengarkan musik cadas! . Mulai plugin dengan klik tombol Heatmap pada panel Raster, atau dengan melakukan navigasi Raster | Heatmap | Heatmap…. Gambar 5.19: General principle of creating heatmaps Pilih layer noise dari kotak centang Input point layer. Dengan memilih tombol … di bagian kanan dari kolom Output raster, tentukan direktori di mana Anda akan menyimpan peta heat map. Catatan, Anda tidak perlu menuliskan ekstensi berkasnya, ia akan dipilih secara otomatis. Gunakan kotak centang Output format untuk memilih format data yang diinginkan. Pilihan paling umum adalah GeoTIFF, namun untuk peta yang mencakup area luas, lebih baik gunakan format yang lain, misalnya Erdas Imagine. Yang terakhir harus ditentukan adalah Radius. Nilai ini menentukan jarak dari setiap piksel di mana QGIS akan mencari fitur tetangganya dan mengikutsertakan keberadaan piksel tetangga ke dalam perhitungan. Secara umum, radius yang lebih besar akan memberikan hasil yang lebih umum (tergeneralisasi), karena jumlah fitur akan dibagi dengan area yang lebih besar. Radius lebih kecil akan memberikan hasil yang lebih presisi, namun apabila terlalu kecil maka kita tidak akan dapat melihat pola distribusinya. Radius pencarian dapat didefinisikan dalam meter atau unit peta. Untuk menentukan radius pencarian dari wilayah tertentu, kita dapat menggunakan formula sederhana berikut yang diperoleh dari formula untuk luas lingkaran: \\[\\begin{equation*} r = \\sqrt{\\frac{S}{\\pi}} \\end{equation*}\\] Sebagai contoh, apabila kita ingin menghitung kepadatan per kilo meter persegi, maka radius pencariannya adalah sebagai berikut: \\[\\begin{equation*} r = \\sqrt{\\frac{1 km^2}{\\pi}} = \\sqrt{\\frac{1000000 m^2}{3.1415926}} \\approx 564.2 m \\end{equation*}\\] Untuk mengatur hasil yang lebih baik, kita dapat memilih kotak Advanced dan menentukan beberapa parameter tambahan: Rows and Columns: Ini memungkinkan kita untuk mendefinisikan dimensi raster luaran. Dimensi yang lebih besar akan menghasilkan ukuran berkas luaran yang lebih besar, sedangkan dimensi yang lebih kecil akan menghasilkan luaran yang kasar dan kotak-kotak (pixelated). Kolom input ditautkan satu sama lain, sehingga mengubah nilai dalam bidang baris (misalnya, membagi dua) juga akan menyebabkan perubahan yang sesuai dengan nilai di bidang kolom, dan sebaliknya. Selanjutnya, nilai-nilai ini memiliki pengaruh langsung pada ukuran piksel (lihat poin berikutnya). Perlu ditekankan bahwa luas raster dipertahankan saat mengubah dimensi raster. Ukuran piksel X dan Y: Ukuran piksel raster menentukan seberapa kasar atau terperinci tampilan pola distribusi. Ukuran piksel yang lebih kecil akan memberikan hasil yang lebih halus, tetapi waktu pemrosesan dan memori yang diperlukan untuk analisis akan meningkat. Sel besar akan diproses lebih cepat, tetapi raster yang dihasilkan akan pixelated. Jika piksel-pikselnya sangat besar, beberapa pola akan menjadi tidak terlihat, jadi Anda mungkin perlu menjalankan analisis beberapa kali, mencoba ukuran sel yang berbeda untuk mendapatkan hasil yang memenuhi kebutuhan Anda. Ukuran piksel tergantung pada dan terkait dengan dimensi raster. Menambahnya akan mengurangi jumlah baris dan kolom, dan sebaliknya. Kernel shape: Ini mengontrol bagaimana titik mempengaruhi perubahan dengan perubahan jarak dari titik ini. Heatmap plugin QGIS saat ini mendukung kernel seperti berikut: – quartic (dikenal juga dengan biweight) – triangular – uniform – triweight – Epanechnikov Gambar 5.20: Distribution of the point influence for different kernel Bergantung pada bentuk kernel, kita akan mendapatkan heat map yang lebih halus, atau hotspot yang lebih jelas. Misalnya, kernel triweight akan memberikan hotspot yang lebih jelas, lebih tajam daripada kernel Epanechnikov, karena kernel Epanechnikov memiliki pengaruh lebih rendah di dekat pusat hotspot. Juga, dalam bidang ilmiah yang berbeda, kernel yang berbeda lebih disukai; misalnya, dalam analisis kejahatan, kernel kuartik biasanya digunakan. Dimungkinkan juga untuk menggunakan jari-jari pencarian variabel untuk setiap titik dengan memilih kotak centang Use radius from field dan memilih bidang atribut dengan nilai jari-jari dari kotak centang. Jika Anda perlu membobot poin (dengan kata lain, menambah atau mengurangi pengaruhnya) dengan beberapa atribut numerik, aktifkan kotak centang Use weight from field dan pilih bobot yang sesuai. Dalam contoh kita, kita tidak akan menggunakan fungsi ini, tetapi Anda dapat mencobanya sendiri. Seperti yang dijelaskan sebelumnya, ukuran piksel memiliki pengaruh langsung pada kualitas heat map yang dihasilkan, jadi penting untuk memilihnya dengan hati-hati. Dalam kebanyakan kasus, ukuran sel dipilih sedemikian rupa sehingga kita mendapatkan 10 hingga 100 sel per unit area (yang pada gilirannya ditentukan oleh radius pencarian). Untuk menghitung ukuran piksel, kita perlu menyelaraskan unit area dengan unit jarak; misalnya, jika kita menghitung kepadatan menggunakan kilometer persegi dan menentukan radius pencarian dalam meter, maka perlu untuk mengubah kilometer persegi menjadi meter persegi. Langkah selanjutnya adalah membagi area dengan jumlah sel yang diinginkan. Akhirnya, karena ukuran piksel ditentukan oleh lebar atau tingginya (karena sel raster biasanya memiliki bentuk persegi), kita perlu mengekstrak akar kuadrat dari nilai ini. Dalam contoh kita, kita akan membuat heat map dengan radius pencarian 1000 m, sehingga area pencarian akan sekitar 3,14 kilometer persegi. Saat dinyatakan dalam meter, ini akan menjadi sebagai berikut: \\[\\begin{equation*} 3.14 km^2 = 3.14 . 1000 m . 1000 m = 3140000m^2 \\end{equation*}\\] Karena kita ingin heat map yang halus, kita akan menggunakan jumlah piksel yang relatif besar per satuan luas; katakanlah 100 piksel per 3,14 kilometer persegi. Jadi, kita membagi area dalam meter persegi dengan jumlah piksel yang diinginkan: \\[\\begin{equation*} \\frac{3140000m^2}{100 cells} = 3140000m^2 per cell \\end{equation*}\\] Akhirnya, kita menghitung akar kuadrat dari nilai ini untuk mendapatkan ukuran yang memungkinkan kita memiliki 100 piksel per 3,14 kilometer persegi: \\[\\begin{equation*} \\sqrt{31400m^2} \\approx 177.2 m \\end{equation*}\\] Tentu saja ini bukan aturan yang kaku tapi hanya rekomendasi. Anda dapat menggunakan ukuran piksel lain dengan aman, tergantung datadan hasil yang Anda inginkan. Hanya ingat bahwa nilai yang lebih kecil mengarah pada heat map yang lebih halus, tetapi pada saat yang sama meningkatkan waktu analisis dan menghasilkan ukuran raster yang lebih besar. Ketika semua input dan parameter diatur, tekan tombol OK untuk memulai proses pembuatan *peta panas heat map. Proses pembentukan heat map akan ditampilkan dalam dialog progres kecil. Jika proses ini terlalu lama untuk diselesaikan, Anda dapat menghentikannya dengan menekan tombol Cancel. Perhatikan bahwa setelah membatalkan pembuatan heat map, Anda masih mendapatkan hasilnya, tetapi hasilnya tidak lengkap dan tidak berguna untuk analisis lebih lanjut. Ketika proses selesai, heat map yang dihasilkan akan ditambahkan ke QGIS sebagai raster grayscale, di mana wilayah yang lebih terang menggambarkan dengan nilai kepadatan yang lebih tinggi dan daerah yang lebih gelap berarti memiliki nilai kepadatan yang lebih rendah, seperti ini: Gambar 5.21: Heatmap result in greyscale Untuk meningkatkan keterbacaan dan membuatnya terlihat seperti heat map nyata, kita perlu mengubah gayanya. Untuk melakukan ini, ikuti langkah selanjutnya. Klik kanan pada layer heatmap. Pada menu, pilih Properties. Buka tab Style dan pilih Singleband pseudocolor untuk Render type. Pada grup Load min/max values, aktifkan opsi Min/max. Pilih Extent to Full dan Accuracy to Actual (slower). Tekan tombol Load untuk mendapatkan statistik layer. Hasilnya akan digunakan untuk klasifikasi nilai. Pilih pola warna (color ramp) pada grup Generate new color map, sebagai contoh, YlOrBr (di mana warna berubah dari kuning ke jingga dan kemudian coklat), atau Red (yang menggunakan gradasi warna merah). Jika dirasa perlu, ubah jumlah kelas dan tekan tombol Classify. Klik OK untuk menerapkan perubahan dan menutup dialog properties. Gambar 5.22: Heatmap result pseudocolor Sekarang kita dapat dengan mudah menemukan titik terpanas (ditampilkan dalam warna lebih dekat ke merah jika peta warna Merah digunakan), dan bahkan mengenali beberapa pola distribusi yang tidak terlihat ketika kita melihat lapisan titik asli. Juga, lapisan heat map kita muncul jauh lebih cepat daripada vektor yang digunakan untuk membuat peta panas ini. Mendeteksi wilayah terpanas (“hottest”) Terkadang, Anda tidak perlu heat map itu sendiri, tetapi hanya ingin menemukan hotspot — area dengan kepadatan tertinggi — dan menggunakannya dalam analisis lebih lanjut. Sangat mudah untuk menemukan wilayah seperti itu di QGIS dan mengekstraknya dalam bentuk vektor. Pertama, kita harus mendefinisikan nilai ambang, yang akan digunakan untuk mengenali hotspot. Sebagai nilai awal, kita dapat menggunakan nilai piksel maksimum dalam heat map kita dan kemudian menyesuaikannya dengan kebutuhan kita. Cara paling sederhana untuk menemukan nilai piksel maksimum adalah dengan menggunakan alat Identify Features . Pilih satu layer di pohon layer QGIS, aktifkan alat Identify Features , klik pada daerah yang paling “terpanas” secara visual, dan lihat nilai yang dilaporkan. Dengan peta panas kita, ini akan menjadi 540,32. Jika kita akan menggunakan nilai ini sebagaimana adanya, kita tidak dapat menemukan semua cluster penting, jadi nilai ini harus dikurangi terlebih dahulu. Semakin kecil nilai yang dipilih (dibandingkan dengan nilai maksimum), semakin besar jumlah cluster yang ditemukan. Luas cluster yang terpisah juga akan tumbuh. Sebagai contoh kita, kita memilih nilai 200. Sekarang, buka Raster Calculator dari menu Raster, tentukan path di mana berkas akan disimpan dalam kolom Output layer, dan masukkan formula “heatmap@1”&gt;=200 pada kolom Raster calculator expression, seperti berikut: Gambar 5.23: Heatmap result pseudocolor Formula ini digunakan untuk membuat apa yang disebut dengan mask (topeng) . Jika nilai piksel dari lapisan input lebih besar atau sama dengan nilai ambang batas kita 200, maka nilai piksel output akan menjadi 1. Jika tidak, itu akan menjadi 0. Jadi, raster luaran kita akan menjadi raster biner, dengan hanya dua piksel nilai — 0 dan 1 — yang sangat mudah dikonversi menjadi vektor. Biarkan semua nilai lainnya tetap tidak berubah, sehingga raster yang dihasilkan akan memiliki dimensi dan ukuran sel yang persis sama dengan yang dimasukkan. Tekan tombol OK untuk memulai perhitungan. Ketika selesai, layer raster hitam-putih baru akan ditambahkan ke kanvas QGIS, seperti yang ditunjukkan di sini: Gambar 5.24: Mask for heatmap Untuk mengonversi topeng raster ke dalam format vektor, kita perlu membuat poligon dari semua piksel yang terhubung dengan nilai yang sama. Di sinilah tool Polygonize amat membantu. Di kotak alat Processing Toolbox, Anda dapat menemukan algoritma Polygonize dengan mengetik namanya di bidang filter di bagian atas kotak alat. Klik dua kali pada nama algoritma untuk membuka dialognya, dan Anda akan melihat sesuatu seperti ini: Gambar 5.25: Polygonized mask Pilih layer mask yang sebelumnya dibuat sebagai layer Input , tentukan path tempat hasilnya akan disimpan menggunakan bidang layer Output , dan klik tombol Run untuk memulai algoritma. Setelah selesai, layer vektor baru akan ditambahkan ke QGIS. Lapisan ini memiliki atribut yang disebut DN (jika Anda tidak mengubahnya) yang menunjukkan nilai piksel setiap poligon dalam lapisan. Jadi, yang perlu kita lakukan adalah menghapus semua fitur yang memiliki nilai atribut sama dengan nol. Fitur yang tersisa adalah hotspot. Untuk menghapus fitur yang tidak perlu dari lapisan hotspot, pilih di Layer Tree QGIS, klik kanan untuk membuka menu konteks, dan pilih Open Attribute . Klik pada tombol Select features using an expression. Dalam dialog Select by expression , masukkan “DN” = 0 (jika perlu, ganti DN dengan nama kolom tertentu), klik tombol Select , dan tutup dialog. Mulai mengedit dengan mengklik tombol Toggle editing mode, atau tekan Ctrl + E . Untuk menghapus fitur yang dipilih, tekan tombol Delete atau klik Delete selected features. Terakhir, matikan mode pengeditan dengan menekan Ctrl + E atau klik kembali Toggle editing mode Gambar 5.26: Cleaned hotspot polygon Sekarang, lapisan hotspot hanya berisi poligon hotspot, yang dapat digunakan untuk analisis lebih lanjut. Misalnya, kita dapat menggabungkan kluster ini dengan informasi tentang bangunan terdekat dan jenis kebisingan untuk menemukan ketergantungan dan mengembangkan beberapa saran untuk mengurangi tingkat kebisingan di sana. Mengamati pola distribusi dengan garis kontur Selain mendeteksi titik panas, heatmap juga dapat digunakan untuk mendeteksi perubahan intensitas atau memvisualisasikan arah perubahan nilai. Cara paling umum untuk melakukan kedua tugas ini adalah dengan membuat garis kontur. Untungnya, QGIS memiliki semua alat yang diperlukan untuk ini. kita akan menggunakan Processing Toolbox lagi, tetapi pembuatan garis kontur juga tersedia di plugin GDALTools (yang dapat ditemukan di menu Raster ). Di kotak Processing Toolbox, Anda dapat menemukan algoritma Contour dengan mengetik kata tersebut di bidang filter di bagian atas kotak alat. Klik dua kali pada nama algoritma untuk membuka dialognya, yang terlihat seperti ini: Gambar 5.27: Creating Contour Pilih layer heatmap sebagai input. Di bagian Output, tentukan direktori di mana hasil akan disimpan. Juga, perlu untuk menentukan Interval between contour lines. Tidak ada prinsip yang kaku tentang penentuan interval ini. Aturan umum adalah memilih interval yang mendeteksi pola di area dengan perubahan kepadatan halus. Di sini kita akan memilih interval 10. Ketika semua informasi yang diperlukan telah ditentukan, klik Run untuk memulai pembuatan garis kontur. Setelah beberapa waktu, layer vektor poligonal baru akan ditambahkan ke QGIS, dan kita dapat mulai menganalisisnya. Pertama, jika perlu, pindahkan layer kontur ke atas heat map di QGIS. Selain itu, lebih baik menyesuaikan simbologi kontur untuk membuatnya lebih mudah dikenali dari latar belakang peta panas. Gambar 5.28: Contour heatmap Kontur yang lebih padat sesuai dengan perubahan kepadatan yang lebih intens. Selain itu, kita dapat mengidentifikasi arah perubahan kebisingan. Misalnya, dalam screenshot sebelumnya, kita dapat melihat bahwa di beberapa tempat, distribusi kebisingan di sekitar pusat tidak sama; intensitas berkurang lebih cepat di tenggara daripada di barat laut. Jadi, kita dapat berasumsi bahwa ada beberapa hambatan untuk kebisingan di sana. 5.4 Analisis kesesuaian Kita hidup di dunia yang penuh dengan berbagai hubungan yang dapat dianalisis dalam konteks fungsional, temporal, atau spasial. Hubungan spasial merupakan hal yang sangat menarik di bidang GIS, karena di sini objek ruang direpresentasikan dengan cara yang membantu penjelasan serta memperlihatkan hubungan geografis mereka. Analisis kesesuaian adalah bagian mendasar dari analisis GIS yang menjawab pertanyaan, “Di mana tempat terbaik untuk menempatkan fasilitas baru?” Dalam bab ini, kita akan dihadapkan pada dasar-dasar analisis kesesuaian melalui pencarian tempat terbaik untuk tempat tinggal. Kita akan belajar cara: - menginterpretasikan relasi spasial antar obyek - mengekspresikan relasi ini melalui data spasial - menganalisis data spasial sesuai serangkaian kriteria yang ditentukan - melakukan analisis overlay dan menjelaskan hasilnya Dasar Analisis Kesesuaian Analisis kesesuaian diakui sebagai pendekatan multi-criteria decision support. Dengan kata lain, tujuan utamanya adalah untuk membagi bidang yang diminati menjadi dua kategori berdasarkan seperangkat kriteria yang telah ditentukan: sesuai untuk beberapa jenis penggunaan (hidup, bangunan, konservasi, dan sebagainya) dan tidak sesuai. Pendekatan umum yang digunakan untuk penilaian kesesuaian adalah overlay lapisan ganda yang mendukung keputusan multi-kriteria. Bergantung pada data yang mewakili kriteria kesesuaian dan overlay, ada dua pendekatan dasar yang tersedia: Analisis kesesuaian dengan data vektor. Ini terutama menggunakan operasi seperti buffering dan kombinasi berurutan mereka menggunakan operasi overlay vektor, seperti Clipping, Intersection, dan Union. Analisis kesesuaian dengan data raster. Ini sangat bergantung pada aljabar raster, yang digunakan untuk mengklasifikasikan ulang cakupan raster awal dan kemudian menggabungkannya untuk menghasilkan raster kesesuaian biner atau peringkat. Pendekatan ini lebih fleksibel, karena memungkinkan untuk menghasilkan beberapa kelas kesesuaian dan mengubah bobot raster sesuai dengan pentingnya faktor yang diwakilinya. Dampaknya, pengguna dapat menghasilkan kombinasi hasil, tetapi alur kerja membutuhkan lebih banyak upaya yang terhubung ke pengambilan data dan keputusan. Vector data Raster data Main operations Buffering Vector data rasterization Clip overlay Proximity raster creation Intersection overlay Raster reclassification Union overlay Raster algebra addition Raster algebra multiplication Raster algebra substraction Advantages Workflow quickness Simple data reclassification Workflow simplicity Good representation of continuous features Good representation of man-made features Crisp and fuzzy classes are possible Different weighting according to their importance Various assessments are possible Limitations Provide only crisp classes Reclassification and ranking subjectivity Usually provide binary assessment only Workflow complexity Apa pun pendekatan yang akan diikuti, alur kerja analisis kesesuaian umum melibatkan beberapa langkah umum. kita sekarang akan melihat lebih dekat pada mereka untuk memastikan pemahaman yang lebih baik tentang sistem analisis kesesuaian: Definisikan maksud dan tujuan dari analisis Anda Pertanyaan yang akan dipelajari dirumuskan secara umum, dan signifikansi terapannya ditentukan, yang nantinya akan menjadi seperangkat kriteria kesesuaian. Beberapa aplikasi kesesuaian yang populer meliputi yang berikut: Pertanian : Penilaian kesesuaian area untuk budidaya tanaman tertentu. Ritel : Area dinilai dari sudut pandang pemasaran — apakah akan menarik pelanggan atau pembeli baru, atau tidak. Jenis analisis ini sangat diminati ketika memilih lokasi belanja yang disukai. Energi terbarukan : Menilai kesesuaian lahan untuk lokasi tenaga angin atau stasiun tenaga surya adalah tren yang luar biasa di bidang perencanaan geospasial untuk keberlanjutan. Konservasi alam : Kebutuhan konservasi diprioritaskan menggunakan pemodelan kesesuaian habitat, dan kawasan ini dibagi menjadi lokasi yang lebih atau kurang bernilai untuk kelangsungan hidup dan reproduksi spesies tertentu. Secara umum, aplikasi utama dari analisis kesesuaian adalah di bidang perencanaan penggunaan lahan, yang bertujuan memprioritaskan berbagai jenis kegiatan manusia dalam ruang dan sumber daya alam yang terbatas. Lakukan analisis ketersediaan data dan tentukan relevansinya terhadap maksud dan tujuan Relevansi data dengan tujuan dan sasaran hendaknya ditentukan. Ketersediaan data saat ini dan kebutuhan data masa depan sebaiknya dianalisis, terutama pengetahuan tentang apakah turunan data saat ini dapat digunakan untuk analisis atau tidak. Misalnya, jika kita harus menganalisis kesesuaian untuk kebutuhan pertanian, DEM dapat menjadi sumber yang bagus. Ini tidak hanya memberikan informasi dasar tentang relief, tetapi juga beberapa turunan yang bermanfaat, seperti kemiringan dan aspek. Hasil utama dari tahap ini adalah daftar sumber data primer dan turunan potensial mereka. Definisikan kriteria dari analisis Ini adalah tahap yang paling penting, di mana tujuan analisis digambarkan sebagai kriteria numerik yang jelas berdasarkan data yang relevan. Tujuan deskriptif diterjemahkan ke dalam bahasa analisis SIG. Pada tahap ini, berbagai jenis hubungan spasial antara objek dianalisis, dan beberapa hubungan paling populer termasuk yang berikut: hubungan point-to-point : – “is within”: Semua sekolah yang berjarak 1 km dari tempat tinggal – “is nearest to”: Sekolah dasar yang paling dekat dengan tempat tinggal Gambar 5.29: Example of the “is within” point-to-point relationship hubungan point-to-line: – “is nearest to”: alan yang paling dekat dengan pintu masuk stasiun kereta bawah tanah Gambar 5.30: Example of the “nearest to point-to-line” relationship point-to-polygon relationships: – “is contained in”: Semua sekolah negeri dalam batas komunitas tertentu Gambar 5.31: Example of the “is contained in” point-to-polygon relationship relasi line-to-line: – “crosses”: Apakah jalan setapak tertentu melintasi jalan – “is within”: Temukan semua jalan setapak yang berjarak 1 km dari sungai tertentu – “is connected to”: Temukan semua jalan yang terhubung ke jalan raya tertentu relasi line-to-polygon: – “intersects”: Temukan semua distrik yang dilintasi oleh jalan setapak – “contains”: Temukan semua jalan yang benar-benar dalam satu kabupaten tertentu Gambar 5.32: Example of the “intersects” line-to-polygon relationship relasi polygon-to-polygon: – “completely within”: Temukan semua kabupaten yang sepenuhnya berada dalam zona bahaya – “is nearest to”: Find the building that is nearest to a park Gambar 5.33: Example of the “completely within” polygon-to-polygon relationship Analisis primer dan penyiapan data Data dianalisis sesuai dengan serangkaian kriteria yang ditentukan pada tahap sebelumnya. Operasi analisis umum melibatkan pemilihan berdasarkan lokasi, buffering, rasterisasi, proximity (jarak raster), dan sebagainya. Setelah semua lapisan yang diperlukan siap, data tersebut harus siap untuk di-overlay, yang melibatkan proyeksi ulang ke sistem referensi koordinat umum (jika perlu), menetapkan rentang untuk berbagai peringkat, dan klasifikasi ulang dalam sistem peringkat umum. Semua layer harus berisi nilai dalam unit yang seragam, jika tidak, overlaynya akan menjadi tidak berarti dan sulit untuk ditafsirkan. Overlay data dan interpretasikan hasilnya Lapisan yang disiapkan sebelumnya digabungkan menjadi satu cakupan yang didasarkan pada seperangkat aturan yang ditentukan pengguna. Bergantung pada data yang tersedia dan aturan yang diterapkan, penilaian kesesuaian berikut dimungkinkan: Binary suitability assessment Semua area dibagi ke dalam kategori yang sesuai dan tidak sesuai. Ini adalah tipe penilaian paling sederhana yang dapat diperoleh dari overlay data vektor. Ranked suitability assessment Tempat diberi peringkat dari yang paling tidak sesuai hingga yang paling sesuai berdasarkan seluruh rentang kriteria yang telah ditentukan. Jenis penilaian ini dapat diturunkan dari data vektor dan raster. Ini memungkinkan Anda menghindari penilaian ya / tidak yang sederhana, yang tidak melekat pada kata aslinya. Keuntungan ini diimbangi oleh subjektivitas peringkat data dan kepentingan yang sama dari berbagai faktor. Namun demikian, di dunia nyata, kontribusi mereka terhadap penilaian keseluruhan dapat bervariasi. Weighted suitability assessment Ini serupa dengan jenis penilaian sebelumnya dan hanya memiliki satu perbedaan signifikan: berbagai faktor dapat diberi bobot berbeda sesuai dengan kepentingannya untuk jenis kegiatan tertentu. Jenis penilaian ini bergantung pada pendekatan aljabar raster dan dianggap inklusif, tetapi bukan tanpa subjektivitas, terutama ketika menyangkut faktor pembobotan dan menafsirkan hasil akhir. 5.4.1 Tahap 1: Mendefinisikan maksud dan tujuan Sepanjang tutorial ini, kita akan menganggap bahwa kita bekerja untuk satu pasangan muda dengan anak kecil. Mereka mencari tempat yang sempurna untuk tinggal di wilayah tertentu yang menarik perhatian mereka. Tujuan kita adalah menggunakan kekuatan metode analisis kesesuaian berbasis GIS dan memberikan jawaban yang objektif dan dapat diandalkan untuk pertanyaan mereka. Tujuan dari analisis ini adalah untuk menemukan area yang cocok untuk keluarga muda dengan anak, dengan pertimbangan tertentu. Banyak dari persyaratan mereka mirip dengan yang dimiliki oleh perusahaan pengembang perumahan tradisional. Misalnya, kedekatan dengan stasiun kereta bawah tanah, zona hijau, dan keselamatan publik harus dipertimbangkan. Ada juga beberapa persyaratan khusus keluarga yang harus dipertimbangkan. Seperti yang telah disebutkan, keluarga memiliki anak kecil, yang berarti bahwa kita harus memperhitungkan keberadaan anak usia dini atau sekolah dasar di dekatnya. Juga, mereka tertarik pada olahraga, dan akan lebih bagus jika daerah tempat mereka akan tinggal memiliki infrastruktur istirahat yang berkembang dengan baik dan aktif. Setelah tinjauan semacam ini, kita dapat merumuskan beberapa persyaratan dan tujuan yang lebih spesifik: Keselamatan: Area tidak boleh terkena atau memiliki resiko tinggi terhadap ragam bahaya alam dan kejahatan Konektivitas: Harus terhubung dengan baik ke jaringan transportasi kota Greenness and openness: Harus dekat dengan taman atau area hijau lainnya Educational potential: Ada lokasi pendidikan anak usia dini atau sekolah dasar di lingkungan tersebut Active rest opportunities: Termasuk jaringan bersepeda dan fasilitas atletik Cultural life: Galeri seni dan museum dapat dikenali sebagai tanda umum hidupnya budaya Sekarang setelah tujuan dan persyaratan utama telah diklarifikasi, kita dapat melanjutkan ke langkah berikutnya dan mempelajari semua data yang tersedia untuk menilai relevansinya dengan contoh kita. 5.4.2 Tahap 2 : Analisis ketersediaan data dan definisikan relevansi Segera setelah kita menetapkan persyaratan dasar, kita perlu melakukan eksplorasi data yang mungkin untuk digunakan dan relevan untuk analisis. Dataset pelatihan berisi sejumlah besar dataset, dan yang paling relevan di antaranya tercantum dalam daftar berikut: 5.4.2.1 Keselamatan Layer hurricane_evacuation_zones : Zona evakuasi badai adalah area kota yang mungkin perlu dievakuasi karena ancaman yang terkait dengan keselamatan dan kehidupan dari badai topan. Layer hurricane_inundation_zones : Zona genangan badai adalah area genangan badai terburuk. Layer noise_heatmap : Raster yang dibuat di bagian membuat Heat map, yang menunjukkan kepadatan spasial pengaduan kebisingan yang terdaftar mungkin berguna untuk penilaian potensial untuk keselamatan publik. 5.4.2.2 Konektivitas Layer subway_entrances : Lokasi pintu masuk kereta bawah tanah. 5.4.2.3 Greenness dan openness Layer parks : Lapisan yang berisi informasi ruang terbuka hijau, seperti lapangan, trek, taman, dan sebagainya. Layer tree_density : Ini adalah layer raster yang dibuat dari data sensus pohon. 5.4.2.4 Educational potential Layer elementary_schools : Ini adalah lokasi titik sekolah berdasarkan alamat resmi. Lapisan ini mencakup beberapa informasi dasar tentang sekolah, seperti nama, alamat, jenis, dan informasi kontak kepala sekolah. 5.4.2.5 Active rest opportunities Layer bike_routes : Lokasi jalur sepeda dan rute di seluruh kota. Layer athletic_facilities Lapisan ini berisi fasilitas atletik dan beberapa informasi dasar tentangnya, termasuk jenis olahraga utama, permukaan, dimensi, dan sebagainya. 5.4.2.6 Cultural life Layer musemart : Lokasi museum dan galeri seni. 5.4.3 Tahap 3 : Definisikan kriteria analisis Pada layer hurricane_evacuation_zones, ada enam zona, yang diperingkat dalam zona bidang atribut berdasarkan risiko dampak gelombang badai, dengan zona 1 menjadi wilayah yang kemungkinan besar akan banjir. Jika terjadi badai atau badai tropis, penghuni di zona ini harus mengungsi. Daerah dengan nilai zona X tidak berada dalam zona evakuasi. Area dengan nilai zona 0 adalah salah satu dari yang berikut: air, dermaga kecil, atau pulau-pulau tak berpenghuni. Untuk keperluan analisis, lapisan ini harus dirasterisasi dan diberi peringkat sesuai dengan risiko dampak badai, dengan nilai peringkat turun dari area yang tidak berada dalam zona evakuasi ke yang paling mungkin terkena banjir. Lapisan poligon hurricane_inundation_zones berisi informasi tentang risiko genangan akibat badai, ditulis di kolom atribut, di mana nilainya adalah ketinggian lonjakan (dalam feet). Area yang kemungkinan besar akan tergenang diberi nilai 1, dan area yang dikecualikan dari pemodelan inundasi diberi nilai 5. Lapisan ini harus dirasterisasi dan diberi peringkat dengan nilai kesesuaian potensial tertinggi untuk area yang dikecualikan, dan yang terendah untuk bidang kategori 1. Layer raster noise_heatmap adalah raster yang harus diberi peringkat menggunakan beberapa kategori, dengan nilai kesesuaian terendah untuk tempat paling berisik dan sebaliknya. Hal yang baik di sini adalah kita tidak perlu melakukan rasterisasi layer ini, seperti yang kita lakukan pada layer sebelumnya. Pada saat yang sama, menetapkan jumlah dan kisaran untuk peringkat membawa subjektivitas ke dalam penilaian kita. Layer tree_density, yang juga merupakan raster kepadatan, harus dianalisis dengan cara yang sama. Lapisan yang dipilih lainnya harus dianalisis terlebih dahulu untuk kedekatannya. Untuk tujuan ini, pertama-tama kita akan merasterisasi mereka, kemudian membuat continuous raster proximity, dan akhirnya peringkat mereka di bawah beberapa kategori sesuai dengan nilai proximity (semakin dekat suatu objek, semakin tinggi nilai kesesuaian). Sekali lagi, dalam hal peringkat pengguna, kita tidak akan dapat menghindari beberapa subjektivitas dalam penilaian kita. Selain itu, raster kedekatan akhir dapat ditimbang menurut kepentingannya dalam penilaian kesesuaian keseluruhan. 5.4.4 Tahap 4 : Analisis dan persiapan data Ada tiga pendekatan utama untuk analisis data primer. Ini tergantung pada tipe data awal dan atribut yang tersedia: Rasterisasi dan rangking layer vektor yang dikategorikan Ini adalah layer yang sudah mengandung semua nilai yang diperlukan, dan pada tahap persiapan, semuanya harus dirasterisasi ke tingkat dan resolusi yang sama. Selain itu, kategorinya harus diberi peringkat dengan benar, dengan nilai tertinggi untuk area yang paling cocok dan sebaliknya. Contoh dari lapisan ini adalah hurricane_evacuation_zones, hurricane_inundation_zones, dan sebagainya. Raster peringkat kepadatan Ini adalah raster heat mapyang harus dikonversi dari continuous coverage ke nilai yang dikategorikan di mana nilai tertinggi melambangkan area yang paling tepat, dan yang terendah terkait dengan area yang paling tidak cocok. Contoh dari layer ini adalah noise_heatmap dan tree_density. Menghasilkan dan menentukan peringkat proximity raster Ini adalah alur kerja yang paling membosankan. Lapisan vektor harus diraster terlebih dahulu, dan kemudian proximity raster harus dibuat dan diberi peringkat dengan benar. Kategori ini mencakup lapisan vektor berikut: subway_entrances, taman, public_schools, bike_routes, athletic_facilities, dan museumart. Perhatikan bahwa untuk hasil akhir, kita akan selalu memiliki peringkat raster nilai unik, dengan nilai tertinggi menunjukkan area yang paling cocok. Juga, penting bahwa semua raster keluaran berbagi tingkat yang sama, yang diperlukan untuk overlay yang tepat dengan kalkulator raster dan penilaian kesesuaian keseluruhan. Di bagian mendatang, kita akan melalui alur kerja yang disebutkan sebelumnya untuk contoh lapisan raster. Segera setelah Anda memahami prinsipnya, Anda akan dapat menyiapkan lapisan lain secara mandiri. 5.4.4.1 Rasterisasi dan pemeringkatan layer vektor kategori Dalam contoh ini, kita akan mengerjakan lapisan hurricane_evacuation_zones. Atribut yang sangat kita minati adalah zona, yang menggambarkan daerah diprioritaskan untuk evakuasi. Daerah dengan nilai terendah, 1, kemungkinan besar akan dievakuasi, dan sebaliknya. Dalam hal ini, kita dapat menggunakan nilai-nilai ini secara langsung untuk memberi peringkat raster. Satu hal yang perlu diperhatikan ketika kita melakukan rasterisasi adalah kolom atribut yang digunakan untuk rasterisasi harus berupa angka. Jika Anda memeriksa kolom atribut di bagian Field di bawah Properties, Anda akan melihat bahwa zona bidang memiliki Tipe QString, dan nilainya yang berisi angka 1-6 dan huruf (X) ditafsirkan bukan sebagai angka tetapi sebagai urutan simbol atau string. Itu sebabnya kolom ini tidak tersedia untuk rasterisasi dan pertama-tama harus dikonversi menjadi angka. Ini dapat dilakukan dengan mudah dengan Field calculator: Buka tabel atribut lapisan menggunakan klik kanan Open Attribute Table, atau tekan tombol relatif dari toolbar Attribute. Di bilah alat tabel atribut, klik tombol Open field calculator atau gunakan pintasan keyboard Ctrl + I. Pertama-tama, kita harus membuang nilai X yang tidak dapat diartikan sebagai angka dan tidak dapat dikonversi ke dalamnya. Karena kita hanya memiliki satu baris yang berisi nilai X, kita cukup beralih mode pengeditan dengan mengklik tombol di toolbar tabel atribut. Klik dua kali pada sel dan masukkan nilai baru 7. secara manual. Jika Anda memiliki beberapa nilai untuk diubah, Anda dapat menggunakan ekspresi berikut di Kalkulator bidang untuk mengubah beberapa nilai bidang zona: CASE WHEN “zone” = ‘X’ THEN ’ 7 ’ELSE “zone” END. Klik pada tombol untuk membuka jendela dialog Field calculator seperti yang ditunjukkan pada gambar berikut, dan lakukan penyesuaian berikut: Pastikan bahwa sakelar Create a new field diaktifkan. Ketikkan nama kolom Output secara manual, misalnya, peringkat. Pilih Whole number (integer) dari daftar tipe field Output, karena kita akan menggunakan integer pendek untuk peringkat. Kurangi lebar bidang Output ke 1. Ini karena nilai peringkat tidak melebihi 10 dan kita tidak ingin membuat data berlebih dengan menghasilkan kolom panjang yang melebihi nilai data aktual. Di kolom Expression, kita perlu mengetik fungsi yang akan digunakan untuk membuat nilai-nilai dari bidang baru. Dalam daftar Function, perluas item Conversions dan klik dua kali pada fungsi toint. Menurut deskripsinya, ini mengonversi string ke angka integer. Tidak ada yang berubah jika nilai tidak dapat dikonversi ke integer (misalnya, 123asd tidak valid). Setelah mengklik dua kali, fungsi akan ditambahkan ke ekspresi dengan braket terbuka, setelah itu Anda harus mengetik (atau mengklik dua kali untuk menambahkan item dari Field and Valuues) nama kolom yang akan dikonversi dalam tanda kutip ganda, dan tutup kurung. Dalam kasus kita, ekspresi yang dihasilkan adalah toint (“zone”). Setelah mengklik tombol OK, kolom baru akan muncul di akhir tabel. Nonaktifkan mode pengeditan, konfirmasi penyimpanan hasil edit, dan keluar dari jendela tabel atribut. Gambar 5.34: Field Calculator Lapisan siap untuk rasterisasi. Buka jendela dialog dengan pergi ke Raster | Conversion | Rasterize (Vektor to Raster). Di jendela dialog ini seperti yang ditunjukkan pada gambar berikut, sesuaikan pengaturan berikut: 1.Dari daftar drop-down File input (shapefile), pilih hurricane_evacuation_zones. Dari daftar Attribute, pilih peringkat. Dalam Output file for rasterized vectors (raster), klik tombol Select. Arahkan ke direktori kerja Anda, dan ketik hurricane_evacuation_zones.tif sebagai nama layer baru. Pesan ini akan ditampilkan: The output file doesn’t exist. Anda harus mengatur ukuran atau resolusi output untuk membuatnya. Klik OK dan lanjutkan ke tahap berikutnya. Pada langkah sebelumnya, Anda menetapkan beberapa opsi utama. Untuk kenyamanan, kita akan membuat raster dalam tutorial ini dengan tingkat dan resolusi yang sama menggunakan lidar_dem.tif sebagai template. Klik pada tombol untuk membuat parameter baris perintah gdal_rasterize dapat diedit. Setelah modifikasi, garis harus terlihat mirip dengan contoh berikut: gdal_rasterize -a rank -l hurricane_evacuation_zones –a_nodata 0 -te 982199.3000000000465661 188224.6749999999883585 991709.3000000000465661 196484.6749999999883585 -tr 10 10 -ot UInt16 fullpath/hurricane_evacuation_zones.shp fullpath/hurricane_evacuation_zones.tif Ini berarti bahwa raster luaran akan berisi nilai raster dari bidang atribut peringkat. Area di luar layer poligon akan diberi nilai 0, yang akan ditafsirkan sebagai nodata. Tipe data output adalah bilangan bulat unsigned 16-bit. Klik pada tombol OK. Hasil rasterisasi akan muncul di panel Layers. Gambar 5.35: Rasterize Layer hurricane_inundation_zones harus diproses sebelumnya dengan cara yang sama. Lapisan berisi beberapa nomor zona. Ini dapat diartikan sebagai tingkat keparahan risiko genangan; yaitu, semakin tinggi angkanya, semakin rendah risikonya. Ini berarti bahwa kita dapat menggunakan nilai-nilai ini secara langsung untuk peringkat. Dalam hal lapisan ini, parameter baris perintah gdal_rasterize akan terlihat sebagai berikut: gdal_rasterize -a category -l hurricane_inundation_zones -a_nodata 0 -te 982199.3000000000465661 188224.6749999999883585 991709.3000000000465661 196484.6749999999883585 -tr 10 10 -ot UInt16 fullpath/hurricane_inundation_zones.shp fullpath/hurricane_inundation_zones.tif Ketika dikombinasikan, lapisan-lapisan ini dapat memberikan penilaian kumulatif kesesuaian berdasarkan keparahan risiko dari bahaya alam. 5.4.4.2 Mengurutkan raster kepadatan Dalam kasus raster kepadatan, kita dapat menggunakan peta noise_heatamp.tif dan membuat layer tree_density.tif sendiri. Pertama, kita akan menyiapkan noise_heatmap.tif yang awalnya jauh lebih besar daripada bidang minat yang kita kerjakan dalam bab ini. Untuk klip layer raster, gunakan menu berikut Raster | Extraction | Clipper : Dari daftar drop-down File input (raster) pilih noise-heatmap, yang merupakan raster yang akan dipotong. Dalam file Output, klik Select buttonuntuk mengatur direktori dan nama untuk file output, misalnya, noise_heatmap_clip.tif. Di bagian Clipping mode, ada dua mode yang dapat dipilih: Extent adalah tempat Anda dapat memasukkan koordinat kotak pembatas secara manual atau dengan menyeret kanvas peta. Gunakan pendekatan ini untuk mengatur sejauh mana file output Anda. Ingat saja bahwa luasnya harus melebihi batas bidang minat yang ditetapkan oleh zipcode_bound shapefile. Jika Mask layer aktif, Anda dapat memilih bentuk poligonal, dan itu akan digunakan sebagai batas kliping. Setelah Anda mengklik tombol OK, layer akan dimuat ke kanvas peta. Gambar 5.36: Clipper Langkah-langkah berikut harus dilakukan untuk menilai rentang nilainya, membaginya ke dalam kategori, dan memberi peringkat: Klik dua kali pada layer noise_heatmap_clip untuk membuka jendela Layer Properties . Di jendela ini, buka bagian Metadata . Jelajahi jendela Properties di bagian bawah dialog sampai Anda menemukan garis yang disorot Band 1 dengan statistik raster dasar, seperti yang ditunjukkan di sini: Gambar 5.37: Band 1 Metadata Kita akan menangani raster kepadatan, dan nilainya ditafsirkan sebagai jumlah keluhan gangguan per area piksel. Permukaan yang terus menerus ini harus dibagi ke dalam beberapa kategori dan harus diberi peringkat sesuai dengan jumlah pengaduan. Untuk ini, sejumlah kritis pengaduan harus ditetapkan. Tidak ada batasan dan persyaratan yang diakui secara resmi, tetapi kita dapat mengartikan nilai dataset rata-rata sebagai beberapa angka kritis (sedikit lebih besar dari 56, tetapi kita akan menggunakan 50 untuk kenyamanan). Bagilah nilai-nilai ke dalam kategori-kategori dan berikan mereka peringkat berikut (semakin sedikit jumlah keluhan, semakin baik): Category Value range Suitability rank 1 Less than 50 5 2 50 to 100 4 3 100 to 150 3 4 150 to 200 2 5 Greater than 200 1 Untuk pemeringkatan, gunakan menu Raster | Raster Calculator dan ubah suaikan opsi berikut dalam dialog: Pilih direktori dan nama layer Output, sebagai contoh, noise_ranked Pilih band raster __noise_heatmap_clip (???) dan klik pada tombol Current layer extent untuk memastikan layer luaran memiliki resolusi dan extent yang sama. Pada window ekspresi Raster Calculator, masukkan ekspresi berikut: (&quot;noise_heatmap_clip@1&quot; &lt;= 50) *5 + (&quot;noise_heatmap_clip@1&quot; &gt; 50 AND&quot;noise_heatmap_clip@1&quot; &lt;= 100) *4 + (&quot;noise_heatmap_clip@1&quot; &gt; 100 AND &quot;noise_heatmap_clip@1&quot; &lt;= 150) *3 + (&quot;noise_heatmap_clip@1&quot; &gt; 150 AND &quot;noise_heatmap_clip@1&quot; &lt;= 200) *2+ (&quot;noise_heatmap_clip@1&quot; &gt; 200)*1 Ekspresi ini berarti bahwa setiap piksel yang berada di bawah rentang tertentu yang diberikan dalam tanda kurung pertama diberi nilai 1, dan kemudian diperingkat oleh nilai pengali tertentu, yang berada di luar tanda kurung. Setelah Anda mengklik tombol OK, raster yang direklasifikasi akan dimuat ke panel Layers. Gambar 5.38: Reclassified raster Perhatikan hal ini: karena peringkat, peta panas terbalik; yaitu, hotspot paling berisik mendapatkan peringkat terendah dan tempat paling tenang mendapatkan peringkat tertinggi. Dengan cara yang sama, kita dapat membuat dan memberi peringkat peta panas untuk objek titik lain yang menarik dalam analisis kesesuaian kita, yaitu pohon dan museumart . 5.4.4.3 Pembuatan dan pengurutan proximity rasters Alur kerja akan dijelaskan dalam contoh lapisan vektor titik subway_entrances: Pertama, layer harus dirasterisasi dengan cara yang umum. Baris gdal_rasterize akan berisi parameter berikut:t, the layer should be rasterized in a common way. The gdal_rasterize line will contain the following parameters: gdal_rasterize -l subway_entrances -burn 1 -a_nodata 0 -te 982199.3000000000465661 188224.6749999999883585 991709.3000000000465661 196484.6749999999883585 -tr 10 10 -ot Byte fullpath/subway_entrances.shp fullpath/subway_entances.tif Di lapisan output, lokasi titik yang ada akan ditandai dengan nilai piksel 1, sementara semua area lain akan diberi nilai nodata 0. rgi ke _ Raster | Analisis | Kedekatan (Jarak Raster) . Dialog ini menghasilkan peta kedekatan raster yang menunjukkan jarak dari pusat setiap piksel ke pusat piksel terdekat yang diidentifikasi sebagai piksel target. Pixel target adalah piksel dalam raster sumber yang nilai piksel rasternya berada di set nilai piksel target. Jika tidak ditentukan, semua piksel bukan nol akan dianggap piksel target. Di jendela dialog, sesuaikan parameter berikut: Dari daftar drop-down File input, pilih layer subway_entrances . Dalam file Output, klik tombol Select dan tentukan path dan nama untuk layer output, misalnya, subway_entances_proximity.tif . Pastikan parameter unit Dist diaktifkan dan diatur ke GEO . Dalam hal ini, jarak yang dihasilkan akan berada dalam koordinat georeferensi (kaki). Baris parameter yang dihasilkan akan terlihat seperti ini: gdal_proximity.bat fullpath/subway_entances.tif fullpath/subway_entances_proximity.tif -distunits GEO -of GTiff Gambar 5.39: Proximity analyses Kedekatan raster harus dibagi ke dalam kategori diskrit dan mereka harus diberi peringkat. Untuk operasi ini, kita akan menggunakan Kalkulator Raster. Masalah utama di sini adalah untuk memutuskan jumlah dan memilih kategori kedekatan yang tepat untuk peringkat. Keputusan optimal tergantung pada apa yang disebut jari-jari berjalan, yaitu jarak yang membuat orang nyaman untuk berjalan. Secara umum, perencana transportasi telah mengamati bahwa jarak berjalan yang tampaknya dilalui sebagian besar orang dengan nyaman — di luar itu penumpang turun secara drastis — adalah sekitar 400 m (sekitar 1.300 kaki). kita akan menerapkan aturan 400 m ini untuk mengkategorikan nilai-nilai layer (min sebagai nol dan maks sebagai 4.888,71) menjadi empat kategori, dengan peringkat berikut: Kategori Proximity values range (feet) Suitability rank 1 Less than 1,300 4 2 1,300 to 2,600 3 3 2,600 to 3,900 2 4 Greater than 3,900 1 Buka Raster | Raster Calculator dan sesuaikan opsi utamanya. Masukkan ekspresi berikut untuk menghasilkan peta Enter the following expression to generate a new subway_entrances_proximity_ranks raster: (&quot;subway_entances_proximity@1&quot; &lt;= 1300) *4 + (&quot;subway_entances_proximity@1&quot; &gt; 1300 AND &quot;subway_entances_proximity@1&quot; &lt;= 2600) *3 + (&quot;subway_entances_proximity@1&quot; &gt; 2600 AND &quot;subway_entances_proximity@1&quot; &lt;= 3900) *2 + (&quot;subway_entances_proximity@1&quot; &gt; 3900)*1 Di tangkapan layar berikut, Anda dapat melihat seperti apa raster berkelanjutan (di kiri) dan peringkat (di kanan): Gambar 5.40: Field Calculator Dengan cara yang sama, Anda dapat memproses ulang layer vektor lain yang harus dianalisis dari posisi kedekatan, yaitu taman, bike_routes, athletic_facilities, dan sekolah dasar. Sebagai hasilnya, Anda akan memiliki seperangkat lapisan raster yang diberi peringkat dengan beberapa kategori sesuai dengan kedekatan objek yang dipilih. Semakin tinggi pangkat, semakin dekat objek. Sebagai pedoman umum, terapkan nilai 400 m (atau 1300 kaki) untuk memberi peringkat pada raster dengan benar. 5.4.5 Tahap 5 : Overlay data dan interpretasi hasil Sekarang kita memiliki segalanya siap untuk menutupi raster dan menghasilkan penilaian kesesuaian kumulatif. Pada gambar berikut, Anda dapat melihat daftar lengkap lapisan, ditimbang oleh kepentingannya untuk kesesuaian umum. Bobot adalah koefisien sederhana dalam kisaran 0 hingga 1, dan mereka digunakan untuk memodifikasi peringkat dengan benar. Gambar 5.41: list of layers weighted by their importance for general suitability Ungkapan yang digunakan untuk penilaian kesesuaian kita dapat dikonstruksikan dengan beberapa langkah: Semua faktor yang tersedia yang diwakili oleh layer raster harus dikalikan dengan koefisien bobotnya dan diringkas, seperti ini: (factor_1*weight + factor_2*weight + factor_3*weight + … factor_n*weight) Jenis penilaian ini memberikan kesesuaian kotor, yang sulit untuk ditafsirkan karena nilai-nilai yang diperoleh tidak dihitung secara relatif ke minimum minimum dan maksimum. Untuk kesederhanaan interpretasi, penilaian kesesuaian bruto dapat dibagi menjadi jumlah dari nilai maksimum yang mungkin. Rumus yang diperluas akan terlihat seperti ini: (factor_1*weight + factor_2*weight + factor_3*weight + … factor_n*weight) / (factor_1_max*weight + factor_2_max*weight + factor_3_max*weight + … factor_n_max*weight) Akibatnya, rentang nilai output akan dari 0 hingga 1, di mana nilai kesesuaian maksimum mendekati 1. Secara opsional, hasilnya dapat dikalikan dengan 100, dan nilai output akan menjadi persentase kesesuaian. Pergi ke Raster | Kalkulator Raster untuk melakukan penilaian: Atur path dan nama untuk layer Output Pilih satu layer dari daftar Raster bands untuk mengatur Luas layer sekarang, misalnya, hurricane_inundataion Di jendela Ekspresi, masukkan rumus berikut (jika Anda tidak yakin tentang nilai, lihat tabel sebelumnya): ( ( &quot;athletic_facilities_proximity_ranks@1&quot; * 0.04 + &quot;bike_routes_proximity_ranks@1&quot; * 0.06+&quot;hurricane_evacuation_zones@1&quot; * 0.16+&quot;hurricane_inundation_zones@1&quot; * 0.16+&quot;museumart_ranked@1&quot; * 0.05+&quot;noise_ranked@1&quot; * 0.13+&quot;parks_proximity@1&quot; * 0.12+&quot;schools_proximity@1&quot; * 0.15+&quot;subway_entrances_proximity_ranks@1&quot; * 0.06+&quot;tree_ranked@1&quot;*0.07) / 4.63 ) *1000 Setelah Anda mengklik tombol OK, lapisan yang dihasilkan akan ditambahkan ke kanvas peta. Kisaran nilai kesesuaian raster bervariasi dari 42 hingga 96 persen. Dengan demikian, dapat dengan mudah diklasifikasikan dan ditafsirkan. Arahkan ke properti Layer | Gaya dan sesuaikan properti rendering dengan yang ditunjukkan pada tangkapan layar berikut: Gambar 5.42: Suitability layer Setelah menerapkan pengaturan ini, layer akan terlihat sebagai berikut: Gambar 5.43: Suitability map Kita dapat menggunakan raster ini sebagai dasar untuk penilaian kesesuaian visual utama dari bidang yang kita minati, atau melangkah lebih jauh dan menggabungkannya dengan lapisan lain untuk mengidentifikasi blok yang tepat yang paling cocok dengan seluruh rentang kriteria kesesuaian. Dalam hal ini, kita perlu melakukan urutan terbalik langkah-langkah: pilih area yang paling cocok, vektorisasi, dan overlay poligon kesesuaian maksimum dengan ruang tamu perumahan untuk mengidentifikasi blok dan bangunan yang akan sangat cocok: Raster kesesuaian awal harus dikategorikan ke dalam hanya dua kelas dengan batas kesesuaian 90 persen. Pergi ke Raster | Kalkulator Raster dan tentukan jalur dan nama untuk raster keluaran (misalnya, max_suitability). Di jendela Ekspresi, masukkan “kesesuaian,% ( ??? )”&gt; = 90. Pada halaman berikutnya, Anda dapat melihat bahwa lapisan yang dihasilkan hanya berisi dua kelas: cocok (nilainya 1; ditugaskan ke area dengan kesesuaian yang lebih besar dari atau sama dengan 90 persen), dan tidak cocok (nilainya 0). Sekarang kita perlu melakukan vektorisasi area-area ini untuk dapat melakukan query layer vektor dengannya. Buka jendela dialog Polygonize (Raster to vector) dengan masuk ke Raster | Konversi dan sesuaikan parameter berikut: Gambar 5.44: Polygonize Pilih max_suitability sebagai raster yang akan dipoligonisasi dari file Input (raster) . Berikan path dan nama shapefile keluaran dalam file Output untuk poligon (shapefile) , misalnya, max_suitability_polygons. Aktifkan sakelar Nama bidang dan terima nilai DN default. Opsi ini bertanggung jawab untuk membuat dan mengisi bidang dengan nilai kelas dari raster awal. Gambar 5.45: Masking raster Setelah Anda mengklik tombol OK, shapefile yang dihasilkan akan ditambahkan ke panel Layers. Awalnya, layer berisi poligon semua kelas, sedangkan kita hanya tertarik pada kelas 1. Untuk tujuan memilih dan menghapus poligon yang tidak perlu, kita akan menggunakan fitur Pilih menggunakan opsi ekspresi: Buka tabel atribut max_suitability dengan mengklik tombol di panel Attribute, atau dari klik kanan jalan pintas layer Open Attribute Table. Di panel bilah alat tabel atribut, klik pada fitur Pilih menggunakan tombol ekspresi,, dan masukkan ekspresi berikut: “DN” = 0. Setelah mengklik OK, semua poligon yang memenuhi kondisi akan disorot dalam tabel atribut dan di kanvas peta. Karena kita tidak memerlukan poligon ini untuk analisis lebih lanjut, kita harus menghapusnya. Di panel bilah alat tabel atribut, klik tombol untuk mengaktifkan mode pengeditan, atau gunakan pintasan keyboard Ctrl + E. Sekarang kita dapat menjalankan Hapus fitur yang dipilih menggunakan tombol, atau cukup tekan Del dari keyboard. Setelah menghapus data yang tidak perlu, jangan lupa untuk menyimpan hasil edit Anda (menggunakan atau Ctrl + S) dan menonaktifkan mode pengeditan. Dalam tangkapan layar berikut, Anda dapat melihat bahwa layer hanya berisi poligon yang mencakup nilai kesesuaian maksimum, yang ditetapkan hingga 90 persen: Gambar 5.46: Reclass maximum suitability Sekarang layer ini dapat digunakan untuk overlay dengan layer vektor lainnya dan menganalisis hubungan spasial antara objek, seperti yang dijelaskan dalam bagian Dasar analisis kesesuaian. Sebagai contoh, kita dapat mengidentifikasi area zonasi area tempat tinggal primer yang berpotensi menarik bagi kita sesuai dengan kriteria kesesuaian: Buka jendela dialog dengan masuk ke Vector | Alat penelitian | Pilih berdasarkan lokasi . Dalam dialog ini, Anda pertama-tama harus memilih layer dari objek mana yang akan dipilih — residential_zoning dari fitur Pilih di : daftar turun bawah — seperti ini: Gambar 5.47: Select by location fitur yang berpotongan di: daftar drop-down, pilih max_suitability_polygons, yang akan digunakan sebagai pemilih. Ada beberapa opsi pemilihan overlay. Aktifkan Sertakan fitur input yang memotong fitur seleksi. Hanya poligon yang berada di dalam batas atau kueri mask berpotongan yang akan ditambahkan ke seleksi. Klik pada tombol OK. Anda akan melihat hasil berikut di kanvas peta: Gambar 5.48: Selected maximum suitability Demikian pula, Anda dapat mencoba jenis kueri lain dan mengidentifikasi bangunan yang tepat yang memenuhi kondisi kesesuaian. Dalam hal ini, jendela dialog akan terlihat sebagai berikut: Gambar 5.49: Exact buildings from selected maximum suitability Setelah mengklik tombol OK, Anda akan melihat hasil berikut di kanvas peta: Gambar 5.50: Final result Perhatikan bahwa saat ini, kita telah memilih bangunan yang sepenuhnya berada dalam area kesesuaian maksimum. Jadi, kita siap memberikan jawaban yang solid dan spesifik untuk pertanyaan, “Tempat mana yang terbaik untuk tinggal?” "],
["geoserver.html", "Bab 6 GeoServer 6.1 Pendahuluan 6.2 Komponen yang diperlukan 6.3 Menjalankan GeoServer 6.4 Administrasi GeoServer 6.5 Menambahkan Data 6.6 Mengakses Layer 6.7 ", " Bab 6 GeoServer 6.1 Pendahuluan Concept of webgis Internet-based GIS has been widely recognized in both public and private organizations as a fundamental tool for storage and distribution of data to targeted audiences (Brovelli et al. 2016). The GIS-based Web portals provide a centralized and uniform interface to access the distributed and heteroge- neous resources and data services (Karnatak et al. 2007). According to (Peng 2001), Internet GIS refers to a network-centric GIS tool that uses the Internet as a primary means of providing access to distributed data and other information, disseminating spatial information, and con- ducting GIS analysis. GIS Web service GIS Web services provide direct access to data, eliminating the need to download a dataset and import it into your desktop application, instead using a simple HTTP interface (URL) to access the data. The department uses a variety of service protocols including Web Map Service (WMS), Web Map Tile Service (WMTS), and Web Feature Service (WFS) provided by the Open Geospatial Consortium (OGC) and ESRI Web mapping services. Web Services for Spatial Data Web services for spatial data enable using data from servers directly with desktop GIS software, without downloading first data as files to the own computer. In such a way, it is possible to use always up-to-date data easily. All most common commercial and open-source GIS desktop software products support Web standards (MapInfo, ArcGIS, QGIS, and GRASS). Web services are used so that the user con- nects to the service using a special menu. For connection, user needs to know the server’s URL. After connecting to the server, the user gets a list of available map layers. Web services are also easy to use in map applications on Web. Data may be requested also directly with a HTTP GET or POST request. Most common Web service standards of Open Geospatial Consortium’s (OGC) are: Web Map Service (WMS), Web Map Tile Service (WMTS), Web Feature Service (WFS), and Web Coverage Service (WCS). WMS and WMTS return map image in raster format, WFS data in vector format, and WCS data in raster format. In WMTS, maps are available only in pre-defined scales and size. In WMS, scale and map size can be set without restrictions. WMTS, are faster, because often the map tiles are already ready at the server. For requesting only part of data different filters may be used, for example, BBOX defines the area of interest. GIS Web Services The main challenges of geospatial (Shengru and Abdelguerfi 2006) data are: Geospatial data are in bulk in size; loading the data and map into the client is complex; reload of map and data takes time; geospatial data is highly heterogeneous, and complex geospatial problems need large quantities of geospatial data from multiple sources and locations. Web GIS components The major components of the whole portal are categorized into navigation tools, legend tools, search tools, and other tools such as WMS layer adding tool, layer manager. Fea- tures on the map can be identifying using map identify tool. Distance measuring tool of map also has been included as part of spatial map analysis tool. Results of map query or area of interest can be printed out along with detail legend using print tool. The size, font type, and map output can be customized using this tool. The map can be produced in various file formats such as PNG, JPEG, GIF, or PDF. Region-specific zoom is made possible using quick zoom tool. Searching of non-spatial attributes could also be per- formed by the users. To do this, user first selects a layer and then, fill a from its listed fields/columns. An attribute to be searched is entered in the textbox. Clicking the “Search by Value” will create a pop-up window listing the attribute table matching the search criteria and subsequent zooming in the map and highlighted. The automatic identification of map on mouse cursor moves is made possible using “Auto Identify” widget. The user selects a layer and its corresponding attribute(s), once applied; the user sees the attributes corresponding to the map location when mouse cursor moves. The addition of WMS layers is also possible on this WebGIS portal. First we host the layers having similar projection through the GeoServer (Kamel and Honda 2006) (Fig. 3.1). 6.2 Komponen yang diperlukan Sebelum Anda dapat menggunakan GeoServer, Anda perlu menginstal beberapa perangkat lunak yang dibutuhkan. GeoServer merupakan aplikasi Java. Salah satu hal penting yang paling Anda pastikan adalah virtual Java bekerja pada mesin Anda. Ada dua paket utama Java. Tergantung pada apa yang Anda berencana untuk melakukan dengan Java, Anda mungkin ingin menginstal sebuah JDK (Java Development Kit) atau JRE ( Java Runtime Environment). JDK memungkinkan Anda untuk mengkompilasi kode Java, sedangkan JRE cukup memenuhi syarat untuk menjalankan sebagian besar aplikasi Java. Mulai dari rilis 2.0, GeoServer tidak perlu instalasi JDK penuh, dan Anda dapat memilih JRE. JDK hanya diperlukan jika Anda berencana untuk menulis dan mengkompilasi kode Java. Hal ini dilakukan jika Anda ingin memodifikasi kode sumber GeoServer, untuk memperbaiki kode, atau menambahkan fungsionalitas. Versi saat ini dari GeoServer membutuhkan Java 8. Perlu diingat bahwa Java 9 tidak didukung, mungkin Anda dapat menginstal Geoserver. Hanya saja Anda tidak akan mendapatkan dukungan untuk setiap masalah yang Anda temukan saat menggunakan Geoserver dengan Java 9. Untuk melakukan pemeriksaan apakah sistem Anda memiliki Java JRE 8, silahkan ikuti langkah berikut : Dari menu Start, pilih Control Panel. Pilih Programs. Jika sistem anda memiliki JRE / JDK, Anda akan melihat ikon dengan logo Java, seperti yang ditunjukkan pada gambar berikut. Ini adalah cara pintas ke panel kontrol Java: Gambar 6.1: Cek Java 6.2 Instalasi 6.2.1 Tomcat Paket Tomcat yang digunakan dalam pelatihan ini adalah paket yang disediakan oleh Bitnami. Paket tersebut dapat diunduh di tautan berikut : Tahapan instalasi Bitnami Tomcat dapat dilihat pada video berikut : Gambar 6.2: Instalasi Tomcat 6.2.2 GeoServer Pergi ke GeoServerunduh halaman seperti yang ditunjukkan pada tangkapan layar berikut ( http://geoserver.org/download/ ) dan pilihlah tipe instalasi yang tersedia. Anda akan menemukan beberapa paket berbeda untuk GeoServer. Kita akan menggunakan versi Arsip Web: Anda dapat memilih rilis dari dua cabang yang berbeda - Stable dan Maintenance. Keduanya dibangun untuk keperluan produksi, sehingga Anda dapat memilih apa pun yang Anda inginkan; juga, kami sarankan Anda memilih rilis terbaru karena berisi semua fitur baru yang baru saja dirilis oleh tim pengembang. Terlepas dari Production tab, Anda mungkin telah mencatat ada dua bagian lainnya - Development dan Archived. Di dalam bagian Development, Anda akan menemukan Night Build, rilis ini tidak cocok untuk produksi karena mereka rentan terhadap bug, tetapi berisi semua perubahan yang dilakukan pengembang pada kode sumber, sehingga Anda dapat menggunakannya untuk menguji perbaikan bug yang Anda temukan: Archived berisi rilis yang lebih lama. Ini mungkin berguna jika Anda menggunakan rilis GeoServer lama dan perlu memutakhirkannya ke yang lebih baru, tetapi Anda tidak ingin melompat ke yang terakhir. Kasus penggunaan lain mungkin jika Anda menggunakan GeoServer di lingkungan di mana versi JRE lama, 7.x atau 6.x, tersedia dan Anda tidak dapat memutakhirkannya. Di bagian berikut, kami akan menyebarkan arsip web di Apache Tomcat. Seperti yang mungkin sudah Anda duga, menggunakan server aplikasi Java hampir sama pada sistem operasi apa pun. Bagian selanjutnya adalah umum untuk Linux dan Windows, karena menggunakan Tomcat memerlukan langkah yang sama pada kedua sistem operasi. Selama Anda menggunakan GeoServer yang digunakan di Tomcat, Anda tidak akan memiliki perbedaan dengan contoh-contoh yang dijelaskan dalam buku ini, sistem operasi apa pun yang Anda gunakan. Tahapan pengunduhan GeoServer dapat dilihat pada video berikut : Gambar 6.3: Download GeoServer Untuk melakukan instalasi 6.3 Menjalankan GeoServer Gambar 6.4: Start GeoServer 6.4 Administrasi GeoServer Dalam bab ini, kita akan menjelajahi antarmuka administrasi GeoServer. Ini adalah konsol utama tempat Anda dapat mengontrol hampir semua pengaturan instalasi GeoServer Anda. Dalam rilis pertama, itu sedikit rumit, tetapi karena seri 2.x, nama menu dan ikon konsisten di setiap bagian. Ada juga antarmuka yang ditingkatkan untuk GeoWebCache terintegrasi, di mana Anda dapat melakukan hampir semua konfigurasi caching dari antarmuka GeoServer. Kabar baiknya adalah bahwa kita akan menggunakan mouse lebih banyak di sini daripada bab lain, sehingga keyboard akan mendapatkan istirahat. Dalam bab ini, kita akan membahas semua bagian dari Antarmuka Administrasi Web. Secara khusus, kami akan mengeksplorasi topik berikut secara rinci: Memeriksa status GeoServer Anda dan mencatat konten file Mempratinjau data Anda Pengaturan tuninguntuk Layanan Peta Web ( WMS ), Layanan Fitur Web ( WFS ), dan Layanan Cakupan Web ( WCS ) Tuning global pengaturan Melakukan permintaan melalui antarmuka demo 6.4.1 Dashboard Mengakses antarmuka hanya membutuhkanAnda untuk membuka browser dan arahkan ke http: // localhost: 8080 / geoserver / web . Jika Anda telah membaca bab sebelumnya dan menjalankan contoh-contohnya, Anda harus mengubah kata sandi default untuk pengguna admin. Anda bisa menggunakan yang baru untuk login lagi di GeoServer; kita sekarang akan memusatkan perhatian kita pada tata letak antarmuka. Pertimbangkan tangkapan layar berikut. Anda dapat mengenali tiga area utama di antarmuka web GeoServer: Gambar 6.5: Dashboard GeoServer Area pusat menunjukkan Anda beberapa informasi tentang status GeoServer - elemen di dalamnya berubah sesuai dengan operasi yang Anda lakukan. Tepat setelah Anda masuk, ini menunjukkan kepada Anda detail singkat dari data yang dikonfigurasi, dan peringatan atau kesalahan yang harus Anda koreksi. Baris terakhir menunjukkan nomor rilis dan ada tautan ke kotak surat administrator; ini default ke ahli geografi kuno yang terkenal sampai Anda memasukkan data Anda. Di sisi kanan, ada daftar yang menunjukkan kemampuan GeoServer kepada Anda. Akronim yang tercantum mengacu pada protokol OGC standar; kita akan membicarakan beberapa dari mereka secara terperinci dalam buku ini, dan masing-masing dari mereka memiliki setidaknya satu rilis yang didukung. Angka-angka adalah tautan ke dokumen XML yang secara tepat menggambarkan data dan operasi yang didukung oleh setiap protokol. Mereka adalah sumber daya yang sangat berharga bagi klien yang mau menggunakan layanan Anda. Cobalah untuk membuka WMS 1.1.1tautan dan buka hasilnya dalam editor teks. Anda dapat dengan mudah memahami beberapa bagian. Pertimbangkan yang berikut ini: Yang pertama berisi deskripsi layanan yang dibuka: &lt;Service&gt; &lt;Name&gt;OGC:WMS&lt;/Name&gt; &lt;Title&gt;GeoServer Web Map Service&lt;/Title&gt; Kemudian Anda dapat menemukan beberapa informasi tentang administrator: &lt;ContactInformation&gt; &lt;ContactPersonPrimary&gt; &lt;ContactPerson&gt;Stefano Iacovella&lt;/ContactPerson&gt; &lt;ContactOrganization&gt;Packt Publishing Ltd.&lt;/ContactOrganization&gt; &lt;/ContactPersonPrimary&gt; &lt;ContactPosition&gt;Chief geographer&lt;/ContactPosition Daftar operasi yang didukung dan URL dasar untuk permintaan adalah sebagai berikut: &lt;Request&gt; &lt;GetCapabilities&gt; &lt;Format&gt;application/vnd.ogc.wms_xml&lt;/Format&gt; &lt;DCPType&gt; &lt;HTTP&gt; &lt;Get&gt; &lt;OnlineResource xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xlink:type=&quot;simple&quot;xlink:href=&quot;http://localhost:8080 /geoserver/wms?SERVICE=WMS&amp;amp;&quot;/&gt; &lt;/Get&gt; &lt;Post&gt; &lt;OnlineResource xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; xlink:type=&quot;simple&quot; xlink:href=&quot;http://localhost:8080 /geoserver/wms?SERVICE=WMS&amp;amp;&quot;/&gt; &lt;/Post&gt; &lt;/HTTP&gt; ... &lt;/GetCapabilities&gt; &lt;GetMap&gt; ... &lt;/GetMap&gt; &lt;GetFeatureInfo&gt; ... &lt;/GetFeatureInfo&gt; &lt;DescribeLayer&gt; ... &lt;/DescribeLayer&gt; &lt;GetLegendGraphic&gt; ... &lt;/GetLegendGraphic&gt; &lt;GetStyles&gt; ... &lt;/GetStyles&gt; &lt;/Request&gt; 6.4.2 About dan Status 6.4.3 Data Bagian ini berisi tautanke mesin konfigurasi data. Seperti yang Anda duga, untuk menerbitkan peta di internet dengan GeoServer, Anda perlu menambahkan data spasial ke dalamnya. Pertimbangkan tangkapan layar berikut: Di area ini, Anda dapat mengonfigurasi akses data dan cara aksesnya ke klien: Layer Preview membuka formulir termasuk setiap lapisan yang diterbitkan di GeoServer. Selain itu, jika Anda belum menambahkan data ke instalasi GeoServer Anda, Anda akan menemukan beberapa lapisan sampel sudah terdaftar. Mengklik pada OpenLayerstautan, yang ditempatkan di sebelah kanan nama lapisan, Anda dapat membuka contoh aplikasi web untuk melihat seperti apa data Anda terlihat. Suka. The Keyhole Markup Language ( KML ) link membiarkan Anda men-download data dalam format yang sesuai untuk pratinjau di Google Earth. Ada juga beberapa format lain yang tersedia, tercantum dalam kotak drop-down di ujung kanan baris. Pertimbangkan tangkapan layar berikut: 6.5 Menambahkan Data 6.6 Mengakses Layer 6.7 "],
["hari-kedelapann.html", "Bab 7 MapStore2 7.1 Quick Start", " Bab 7 MapStore2 #MapStore2 MapStore adalah kerangka kerja webgis open source yang sangat modular, dikembangkan oleh GeoSolutions untuk membuat, mengelola, dan berbagi peta dan mashup secara aman. Kerangka kerja yang sederhana dan intuitif ini menggabungkan konten yang disajikan dari server seperti Google Maps, OpenStreetMap, Bing atau dari server lain yang mengikuti standar OGC seperti WFS, CSW, WMS, WMTS, dan TMS. MapStore2 diinstal dan dikonfigurasi pada server aplikasi Web, memungkinkan banyak pengguna mengakses situs menggunakan peramban laman web. MapStore2 digunakan untuk mencari, memvisualisasikan, dan meminta data geospasial yang diterbitkan dan untuk mengintegrasikan berbagai sumber ke dalam tampilan peta tunggal yang dapat dengan mudah dinavigasi. Selain itu, dengan merilis versi baru, perangkat lunak ini memungkinkan pengguna untuk membuat dasbor untuk hosting widget seperti peta mini, grafik statistik, tabel dan banyak lagi. MapStore bertujuan untuk menjadi kerangka kerja produk dan webgis. Sebagai produk geoportal standar, ini adalah produk berbasis web untuk visualisasi dan analisis peta yang memungkinkan Anda membangun situs web interaktif geospasial atau layanan web. Ini menyediakan akses langsung dan real-time ke gudang data geospasial dari semua format geospasial yang didukung. Ini juga menyediakan semua fungsi analisis spasial. Ini berarti Anda dapat menggunakannya untuk membangun situs web yang memberikan kepada klien tipis, dengan tidak lebih dari browser web, aplikasi geospasial yang kuat, dinamis, dan terbuka, yang sebelumnya hanya tersedia dalam aplikasi desktop. Ini juga merupakan kerangka kerja dalam arti dapat digunakan sebagai titik awal untuk membangun aplikasi geospasial yang canggih. Itu tidak bergantung secara eksplisit pada mesin pemetaan tetapi ia dapat bekerja denganOpenLayers , LeafletJS dan Cesium 3D viewer memastikan fleksibilitas terbesar ketika seseorang ingin menggunakannya sebagai kerangka kerja. MapStore telah dirancang sejak awal untuk memberi pengguna pengalaman yang koheren dan komprehensif di berbagai perangkat, oleh karena itu ia harus secara otomatis beradaptasi dengan ukuran layar yang berbeda seperti yang ditunjukkan nanti. MapStore didasarkan pada OpenLayers, Leaflet dan ReactJS, dan dilisensikan di bawah lisensi BSD Sederhana. 7.1 Quick Start Anda dapat memilih untuk mengunduh paket biner mandiri atau file WAR untuk menggunakan MapStore. Paket biner Cara termudah untuk mencoba MapStore adalah dengan mengunduh dan mengekstrak paket biner yang tersedia di halaman rilis MapStore . Di sini Anda dapat menemukan beberapa peta yang telah dikonfigurasikan sebelumnya serta pengguna dan grup. Tujuan dari paket ini adalah untuk memudahkan semua persyaratan yang diperlukan agar Anda mengambil MapStore untuk test-drive. Bagaimana cara menjalankannya Buka lokasi tempat Anda menyimpan file zip, unzip kontennya dan jalankan: Windows: mapstore2_startup.bat Linux: ./mapstore2_startup.sh Arahkan browser Anda ke: http://localhost:8082/mapstore Untuk menghentikan MapStore cukup lakukan: Windows: mapstore2_shutdown.bat Linux: ./mapstore2_shutdown.sh Isi Paket MapStore Tomcat7 Java JRE (Win dan Linux) Demo Demo Aerial Imagery - Demo peta sederhana yang menunjukkan beberapa data citra udara WFS Query Map - Peta demo yang dikonfigurasikan dengan kemampuan bawaan MapStore untuk menanyakan fitur melalui WFS User Map dan User1 Map - Peta masing-masing hanya dapat dilihat oleh pengguna dan user1 , untuk menunjukkan kemampuan MapStore pada manajemen dan izin pengguna / grup. Akun / grup demo Pengguna Grup admin / admin MyGroupAdmin, semuanya tamu semua orang pengguna / pengguna semua orang user1 / user1 semuanya, MyGroup File PERANG Unduh file PERANG dari rilis terbaru di sini . Semua rilis Setelah mengunduh file perang MapStore, instal dalam wadah web java Anda (mis. Tomcat), dengan prosedur biasa untuk wadah tersebut (biasanya Anda hanya perlu menyalin file perang di subfolder webapps). Jika Anda tidak memiliki wadah web java, Anda dapat mengunduh Apache Tomcat dari sini dan menginstalnya. Anda juga akan membutuhkan Java7 JRE . Kemudian Anda dapat mengakses MapStore menggunakan URL berikut (dengan asumsi wadah web pada port 8080 standar): http: // localhost: 8080 / mapstore Gunakan kredensial default (admin / admin) untuk masuk dan mulai membuat peta Anda! "],
["visualisasi-data.html", "Bab 8 Visualisasi Data 8.1 QGIS 8.2 GeoServer", " Bab 8 Visualisasi Data 8.1 QGIS Mengumpulkan dan mengatur data dari sumber yang berbeda hanya setengah dari pekerjaan. Langkah selanjutnya adalah mempresentasikannya di peta, mengungkapkan konten dan fitur tematik secara akurat. Untuk tujuan ini, berbagai teknik desain visual, atau lapisan penataan berdasarkan atributnya, digunakan dalam GIS. QGIS memiliki kemampuan visualisasi kartografi dan penataan data yang luas dan fleksibel. Di bagian ini, kita akan membahas topik dan keterampilan berikut: - Good practices with respect to data organization within a single working document (project) - Visual representation of data, revealing its thematic and spatial features - Layer labeling, which is done to enhance data readability - Control over styles - Base maps used to provide spatial context and a background for your data Hasil utama dari bagian ini adalah proyek, yang dirancang sesuai dengan persyaratan dasar visualisasi kartografi. 8.1.1 Grouping dan Ordering Secara default, layer dimuat dalam urutan abjad (terbalik jika Anda menambahkannya dari panel browser). Setiap layer baru diletakkan di atas layer sebelumnya dan menutupinya. Semua lapisan dihidupkan secara default, ditata dengan simbol seragam sederhana, dan diberi warna acak. Ini adalah alasan ketika orang yang berbeda memvisualisasikan data yang sama, mereka akan melihat warna yang berbeda. Urutan lapisan dapat diubah hanya dengan menyeret dan menjatuhkannya ke atas dan ke bawah legenda. Juga disarankan untuk memesan dan mengatur lapisan dalam beberapa kelompok logis, karena menyederhanakan navigasi dan pemahaman data. Khususnya dalam istilah GIS, lapisan bawah akan berupa fitur raster atau poligon. Di atas poligon akan ada fitur garis dan kemudian arahkan fitur di atas. Untuk mengelola dan mengatur ulang layer dan mempertahankan visibilitasnya, gunakan Layer toolbar di panel Layers , yang diperlihatkan dalam screenshot berikut dan berisi tombol-tombol yang dijelaskan sesudahnya (sesuai urutan tampilan dari kiri ke kanan): Gambar 8.1: Layter Toolbar Tambah Grup : Ini membuat grup lapisan kosong. Kelola Visibilitas Lapisan : Ini memungkinkan kami untuk dengan cepat menampilkan dan menyembunyikan lapisan dan juga menyesuaikan visibilitasnya dengan kombinasi lapisan yang telah ditentukan — yang disebut preset. Filter Legenda Menurut Konten Peta : Jika filter aktif, legenda lapisan hanya menunjukkan item-item yang benar-benar terlihat di dalam kanvas peta. Semua simbol lainnya disembunyikan dari legenda. Rentangkan Semua / Tutup Semua : Tombol digunakan untuk membuka atau menutup lapisan, legenda simbologi, dan grup lapisan, jika ada. Remove Layer / Group : Ini menghapus entri legenda yang dipilih. Ada dua cara membuat grup layer: Klik pada ikon tombol Tambah Grup , dari Layers toolbar. Grup baru akan muncul di bagian bawah daftar lapisan. Ketikkan nama yang sesuai lalu seret dan letakkan lapisan ke dalam grup. Hati-hati jika Anda menyorot grup tertentu, itu akan membuat Sub-grup baru di bawah grup yang aktif. Jika ini terjadi, Anda dapat menyeret sub-grup untuk menjadikannya sebagai grup. Pilih beberapa layer sambil menahan tombol Ctrl, dan gunakan pintasan kontekstual klik kanan Kelompok yang Dipilih untuk menempatkannya dalam satu grup. Dimungkinkan untuk mengembangkan hierarki bertingkat dengan subkelompok dengan memilih grup dan menerapkan Add Group . Item apa pun dari legenda lapisan, apakah itu layer tunggal atau grup, dapat diganti namanya dengan nama pendek klik kanan. Mengganti nama tidak memengaruhi dataset itu sendiri, tetapi memungkinkan kami menerapkan padanya nama yang tepat dan bermakna dalam suatu proyek. Sekarang coba atur sendiri layer-layer itu menjadi beberapa grup yang bermakna, dan beri nama dengan tepat. 8.1.2 Styling Dalam QGIS , gaya adalah cara visualisasi kartografi yang memperhitungkan fitur individu dan tematik layer. Ini mencakup karakteristik dasar simbologi, seperti warna dan keberadaan isian, parameter garis besar, penggunaan marker, rendering skala-tergantung, transparansi lapisan, interaksi dengan lapisan lain, dan label. Gaya yang dipilih dengan baik sangat menyederhanakan persepsi dan keterbacaan data, sehingga penting untuk mempelajari cara bekerja dengan gaya agar dapat mewakili data Anda dengan cara terbaik. Dalam istilah sederhana, pelajari cara membuat peta, “eye-catching”. Pada bagian ini, kita akan membahas layer vektor dan raster secara terpisah, karena stilisasi mereka memiliki beberapa fitur unik. 8.1.3 Vektor The Style menu dari Lapisan Properti dialog menyediakan Anda dengan semua alat yang diperlukan untuk melambangkan dan gaya data Anda. Untuk membukanya, klik dua kali pada nama layer di panel Layers , atau gunakan Properties klik kanan kontekstual, dan pilih bagian Style . Anda akan melihat sesuatu yang mirip dengan 8.2. Gambar 8.2: Layer Property 8.2 GeoServer 8.2.1 Styling 8.2.2 Menggunakan SLD "],
["penyajian-data.html", "Bab 9 Penyajian Data", " Bab 9 Penyajian Data "]
]
